{"version":3,"sources":["lib/markup/photodiode.js","lib/utils.js","config/trigger.js","config/main.js","trials/camera.js","assets/images sync nonrecursive //.(png|jpe?g|svg)$","assets/images/blue_payout_correct_10.png","assets/images/blue_payout_correct_100.png","components/Login.jsx","firebase.js","trials/experimentStart.js","trials/startCode.js","trials/instructions.js","trials/holdUpMarker.js","trials/adjustVolume.js","trials/blockNumber.js","timelines/preamble.js","trials/experimentEnd.js","trials/fixation.js","lib/markup/fixation.js","lib/markup/trial.js","trials/interference.js","trials/accuracy.js","timelines/taskBlock.js","lib/rt-categorize-html.js","config/experiment.js","components/JsPsychExperiment.jsx","timelines/main.js","App.jsx","index.js","lib/markup/stimuli.js"],"names":["ipcRenderer","envConfig","USE_ELECTRON","electron","window","require","photodiodeGhostBox","class_","USE_PHOTODIODE","concat","pdSpotEncode","taskCode","numBlinks","eventCodes","open_task","repeat_pulse_for","ms","i","callback","$","css","setTimeout","pulse_for","send","r","sleep","Promise","resolve","removeCursor","elementId","document","getElementById","classList","add","getQueryVariable","variable","vars","location","search","substring","split","length","pair","decodeURIComponent","getProlificId","jitter","base","offset","Math","floor","random","getTurkUniqueId","require.context","keys","map","turkInfo","jsPsych","turk","workerId","assignmentId","getBlockNumber","data","blockNumber","JSON","parse","responses","addProperties","num_blocks","console","log","beep","audioCodes","context","AudioContext","o","createOscillator","g","createGain","type","connect","frequency","setValueAtTime","currentTime","destination","start","stop","module","exports","left","middle","right","fixation","non_fixation","config","USE_MTURK","outsideTurk","USE_PROLIFIC","USE_FIREBASE","process","REACT_APP_FIREBASE","_unused","USE_CAMERA","REACT_APP_VIDEO","USE_EEG","lang","mlang","_","merge","taskName","USE_VOLUME","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","reverse","pop","prev","charAt","slice","rval","handle","complete","finish","catch","delegateYield","camera","title","markup","instructions","stimulus","baseStimulus","choices","prompt","continue","button","response_ends_trial","on_load","_ref","participantId","get","participant_id","handleEvents","stream","recorder","srcObject","recordedChunks","MediaRecorder","mimeType","addEventListener","size","blob","media","reader","FileReader","fileName","Date","now","onload","readyState","buffer","Buffer","result","stringify","readAsArrayBuffer","saveBlob","Blob","navigator","mediaDevices","getUserMedia","video","desktopCapturer","getSources","types","_x","_asyncToGenerator","_callee","sources","_iterator","_step","source","_context","_createForOfIteratorHelper","mandatory","chromeMediaSource","chromeMediaSourceId","id","error","err","apply","arguments","on_finish","cameraCapture","screenCapture","webpackContext","req","webpackContextResolve","__webpack_require__","code","Login","onLogin","envParticipantId","envStudyId","validationFunction","_useState","useState","_useState2","_slicedToArray","setParticipant","_useState3","_useState4","studyId","setStudy","_useState5","_useState6","setError","useEffect","React","createElement","className","role","Form","onSubmit","preventDefault","loggedIn","Group","controlId","Label","Control","autoFocus","onChange","target","Button","style","width","block","disabled","apiKey","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","databaseURL","REACT_APP_databaseURL","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","db","firebase","initializeApp","firestore","hostname","useEmulator","getFirestoreConfig","studyID","participantID","collection","doc","exists","firestoreConfig","_x2","pConfig","defaultConfig","_objectSpread","experimentStart","task","startCode","setting_up","trial_duration","screenOne","welcome","p1","p2","screenTwo","p3","p4","screenThree","p5","t100","press_one","screenFour","if_see","t020","press_two","screenFive","t003","press_three","screenSix","t212","screenSeven","t112","screenEight","t322","screenNine","t221","screenTen","t211","screenEleven","t232","screenTwelve","p6","p7","p8","screenThirteen","p9","p10","p11","screenFourteen","p12","p13","p14","p15","screenFifteen","practice_trials","tl","splice","pages","show_clickable_nav","holdUpMarker","focus","adjustVolume","adjust_volume","press","numBlocks","questions","block_number","set","preamble","timeline","experimentEnd","duration","end","trial","NO_KEYS","interferenceTrial","too_slow","mag","interference","experimentConfig","Stimuli","font_magnification","response_time_limit","key_answer","Correct","show_stim_with_feedback","feedback_duration","timeout_message","key_press","correct","accuracy","training","num_trials","num_complete","percent_correct","j_data","last","endCurrentTimeline","on_start","num_correct","reduce","accumulator","item","toString","accuracy_cutoff","training_failed_accuracy","training_failed_continue","training_success","of","next_block","taskBlock","trainingBlock","mainBlock","flatMap","Trial","loop_function","rt_categorize_html","plugin","info","description","parameters","plugins","parameterType","HTML_STRING","pretty_name","default","undefined","KEYCODE","ALL_KEYS","array","text_answer","STRING","correct_text","incorrect_text","force_correct_button_press","BOOL","no_function","show_feedback_on_timeout","stimulus_duration","INT","display_element","innerHTML","pluginAPI","querySelector","visibility","trial_data","after_response","clearAllTimeouts","cancelAllKeyboardResponses","key","rt","timeout","atext","replace","getKeyboardResponse","callback_function","endTrial","valid_responses","rt_method","persist","allow_held_key","doFeedback","finishTrial","JsPsychExperiment","dataUpdateFunction","dataFinishFunction","setTimeline","app","renderer","fs","overrideConfig","newConfig","_newConfig","localConfig","remote","path","join","getPath","readFileSync","warn","getConfig","newTimeline","Experiment","settings","on_data_update","App","startDate","toISOString","setLogin","setRenderer","psiturk","setPsiturk","_useState7","_useState8","setEnvParticipantId","_useState9","_useState10","setEnvStudyId","_useState11","_useState12","setParticipantID","_useState13","_useState14","setStudyID","_useState15","_useState16","currentMethod","setMethod","_useState17","_useState18","reject","setReject","query","URLSearchParams","defaultValidation","defaultFunction","setLoggedIn","useCallback","newStudyID","newParticipantID","study_id","start_date","timestamp","task_version","version","credentials","sendSync","lodash","noConflict","turkId","PsiTurk","pID","Fragment","desktop","update","FieldValue","arrayUnion","addToFirebase","mturk","recordTrialData","_ref2","_callee2","_context2","saveData","completeHIT","completePsiturk","start_time","app_version","appVersion","app_platform","platform","results","initParticipant","ReactDOM","render","element"],"mappings":";6GAAA,wGAKIA,GAAc,EAClB,GAAIC,IAAUC,aAAc,CAC1B,IAAMC,EAAWC,OAAOC,QAAQ,YAChCL,EAAcG,EAASH,YAIzB,IAAMM,EAAqB,WACzB,IAAMC,EAASN,IAAUO,eAAiB,UAAY,YAEtD,MAAM,8BAANC,OAAqCF,EAAM,mIAKvCG,EAAe,SAACC,GAmBpB,GAAIV,IAAUO,eAAgB,CAC5B,IACII,EAAYD,EACZA,EAAWE,aAAWC,YAAWF,EAAY,GAbnD,SAASG,EAAiBC,EAAIC,GACxBA,EAAI,GATV,SAAmBD,EAAIE,GACrBC,IAAE,oBAAoBC,IAAI,CAAE,mBAAoB,UAChDC,YAAW,WACTF,IAAE,oBAAoBC,IAAI,CAAE,mBAAoB,UAChDF,MACCF,GAKDM,CAAUN,GAAI,WACZK,YAAW,WACTN,EAAiBC,EAAIC,EAAI,KACxBD,MASPD,CAHkB,GAGUH,GACxBZ,IACFA,EAAYuB,KAAK,UAAWZ,GAC5BU,YAAW,WACTrB,EAAYuB,KAAK,UAAW,KAC3B,O,gCChDT,kPAmFmBC,EAnFnB,OAGMC,EAAQ,SAACT,GACb,OAAO,IAAIU,SAAQ,SAAAC,GAAO,OAAIN,WAAWM,EAASX,OAG9CY,EAAe,SAACC,GACNC,SAASC,eAAeF,GAC9BG,UAAUC,IAAI,aAQlBC,EAAmB,SAACC,GAGxB,IAFA,IACIC,EADQhC,OAAOiC,SAASC,OAAOC,UAAU,GAC5BC,MAAM,KACdvB,EAAI,EAAGA,EAAImB,EAAKK,OAAQxB,IAAK,CACpC,IAAIyB,EAAON,EAAKnB,GAAGuB,MAAM,KACzB,GAAIG,mBAAmBD,EAAK,MAAQP,EAClC,OAAOQ,mBAAmBD,EAAK,MAS/BE,EAAgB,WAEpB,OADmBV,EAAiB,iBAKhCW,EAAS,SAACC,EAAMC,GAAM,OAC1BD,EAAOE,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KAkDzCI,IANa3B,EAIK4B,OAHbC,OAAOC,IAAI9B,GAKE,WACtB,IAAM+B,EAAWC,UAAQC,KAAKF,WAE9B,MADc,GAAA9C,OAAM8C,EAASG,SAAQ,KAAAjD,OAAI8C,EAASI,gBAI9CC,EAAiB,SAACC,GACtB,IAAMC,EAAcC,KAAKC,MAAMH,EAAKI,WAAe,GACnDT,UAAQK,KAAKK,cAAc,CAACC,WAAYL,IACxCM,QAAQC,IAAI,YAAaP,IAGrBQ,EAAO,SAACC,GACZ,IAAMC,EAAU,IAAIC,aACdC,EAAIF,EAAQG,mBACZC,EAAIJ,EAAQK,aAClBH,EAAEI,KAAOP,EAAWO,KACpBJ,EAAEK,QAAQH,GACVF,EAAEM,UAAUC,eAAeV,EAAWS,UAAW,GACjDZ,QAAQC,IAAIG,EAAQU,aACpBN,EAAEG,QAAQP,EAAQW,aAClBT,EAAEU,QACFV,EAAEW,KAAKb,EAAQU,YAAc,M,iBCpG/BI,EAAOC,QAAU,CAChB1E,WAXkB,CAClB2E,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,SAAU,EACVC,aAAc,EACd9E,UAAW,M,+BCPZ,qOASAT,EAAQ,IAAUwF,SAGlB,IAUMtB,EAAa,CACjBS,UAAW,KAAOnE,aAAWC,UAAY,GACzCgE,KAAM,QAIJgB,GAAatC,UAAQC,KAAKF,WAAWwC,YACrCC,EAAepD,gBAAoBkD,EACnC5F,GAAe,EACf+F,EAAkD,SAAnCC,qMAAYC,mBAE/B,IACE/F,OAAOC,QAAQ,YACf,MAAA+F,GACAlG,GAAe,EAGjB,IAGMmG,EAA6C,SAAhCH,qMAAYI,iBAA8BpG,EAEvDqG,EACwCrG,EAExCM,EAC+CN,EAG/CsG,EAAOnG,EAAQ,IAErB,IAAKH,EAAc,CAEjB,IAAMuG,EAAQpG,EAAQ,IACtBqG,IAAEC,MAAMH,EAAMC,GAGhB,IAAMG,EAAW,OAGX3G,EAAY,CAChBO,iBACA+F,UACArG,eACA4F,YACAe,YA5BiBX,EA6BjBG,aACAL,eACAC,iB,2GCrEFa,EAAA,kBAAAC,GAAA,IAAAC,EAAAD,EAAA,GAAAvF,EAAAyF,OAAAC,UAAAC,EAAA3F,EAAA4F,eAAA1C,EAAAuC,OAAAI,gBAAA,SAAAL,EAAAD,EAAAvF,GAAAwF,EAAAD,GAAAvF,EAAA8F,OAAArG,EAAA,mBAAAsG,cAAA,GAAAC,EAAAvG,EAAAwG,UAAA,aAAAC,EAAAzG,EAAA0G,eAAA,kBAAAC,EAAA3G,EAAA4G,aAAA,yBAAAC,EAAAd,EAAAD,EAAAvF,GAAA,OAAAyF,OAAAI,eAAAL,EAAAD,EAAA,CAAAO,MAAA9F,EAAAuG,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,GAAA,IAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAvF,GAAA,OAAAwF,EAAAD,GAAAvF,GAAA,SAAA0G,EAAAlB,EAAAD,EAAAvF,EAAA2F,GAAA,IAAAlG,EAAA8F,KAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAAnH,EAAAiG,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAzC,EAAA8C,EAAA,WAAAF,MAAAgB,EAAAtB,EAAAxF,EAAAkG,KAAAF,EAAA,SAAAe,EAAAvB,EAAAD,EAAAvF,GAAA,WAAAsD,KAAA,SAAA0D,IAAAxB,EAAAyB,KAAA1B,EAAAvF,IAAA,MAAAwF,GAAA,OAAAlC,KAAA,QAAA0D,IAAAxB,IAAAD,EAAAmB,OAAA,IAAAQ,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA3H,GAAA2F,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAvE,EAAAmE,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAK,EAAArC,GAAA,0BAAAsC,SAAA,SAAAvC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,SAAA,SAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAjI,EAAAkD,EAAAzD,EAAAuG,GAAA,IAAAE,EAAAa,EAAAvB,EAAAxF,GAAAwF,EAAAtC,GAAA,aAAAgD,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAc,IAAAE,EAAAd,EAAAN,MAAA,OAAAoB,GAAA,iBAAAA,GAAAvB,EAAAsB,KAAAC,EAAA,WAAA3B,EAAApF,QAAA+G,EAAAgB,SAAAC,MAAA,SAAA3C,GAAAyC,EAAA,OAAAzC,EAAA/F,EAAAuG,MAAA,SAAAR,GAAAyC,EAAA,QAAAzC,EAAA/F,EAAAuG,MAAAT,EAAApF,QAAA+G,GAAAiB,MAAA,SAAA3C,GAAAY,EAAAN,MAAAN,EAAA/F,EAAA2G,MAAA,SAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAA/F,EAAAuG,QAAAE,EAAAc,KAAA,IAAAhH,EAAAkD,EAAA,gBAAA4C,MAAA,SAAAN,EAAAG,GAAA,SAAAyC,IAAA,WAAA7C,GAAA,SAAAA,EAAAvF,GAAAiI,EAAAzC,EAAAG,EAAAJ,EAAAvF,MAAA,OAAAA,MAAAmI,KAAAC,YAAA,SAAAtB,EAAAvB,EAAAvF,EAAA2F,GAAA,IAAAzC,EAAAgE,EAAA,gBAAAzH,EAAAuG,GAAA,GAAA9C,IAAAiE,EAAA,UAAAkB,MAAA,mCAAAnF,IAAAkE,EAAA,cAAA3H,EAAA,MAAAuG,EAAA,OAAAF,MAAAN,EAAA8C,MAAA,OAAA3C,EAAA4C,OAAA9I,EAAAkG,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAA6C,SAAA,GAAAtC,EAAA,KAAAE,EAAAqC,EAAAvC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA4C,OAAA5C,EAAA+C,KAAA/C,EAAAgD,MAAAhD,EAAAqB,SAAA,aAAArB,EAAA4C,OAAA,IAAArF,IAAAgE,EAAA,MAAAhE,EAAAkE,EAAAzB,EAAAqB,IAAArB,EAAAiD,kBAAAjD,EAAAqB,SAAA,WAAArB,EAAA4C,QAAA5C,EAAAkD,OAAA,SAAAlD,EAAAqB,KAAA9D,EAAAiE,EAAA,IAAAK,EAAAT,EAAAxB,EAAAvF,EAAA2F,GAAA,cAAA6B,EAAAlE,KAAA,IAAAJ,EAAAyC,EAAA2C,KAAAlB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAAvB,MAAA0B,EAAAR,IAAAsB,KAAA3C,EAAA2C,MAAA,UAAAd,EAAAlE,OAAAJ,EAAAkE,EAAAzB,EAAA4C,OAAA,QAAA5C,EAAAqB,IAAAQ,EAAAR,OAAA,SAAAyB,EAAAlD,EAAAvF,GAAA,IAAA2F,EAAA3F,EAAAuI,OAAArF,EAAAqC,EAAAU,SAAAN,GAAA,GAAAzC,IAAAsC,EAAA,OAAAxF,EAAAwI,SAAA,eAAA7C,GAAAJ,EAAAU,SAAA6C,SAAA9I,EAAAuI,OAAA,SAAAvI,EAAAgH,IAAAxB,EAAAiD,EAAAlD,EAAAvF,GAAA,UAAAA,EAAAuI,SAAA,WAAA5C,IAAA3F,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAA,IAAA+B,UAAA,oCAAApD,EAAA,aAAA0B,EAAA,IAAA5H,EAAAsH,EAAA7D,EAAAqC,EAAAU,SAAAjG,EAAAgH,KAAA,aAAAvH,EAAA6D,KAAA,OAAAtD,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAAvH,EAAAuH,IAAAhH,EAAAwI,SAAA,KAAAnB,EAAA,IAAArB,EAAAvG,EAAAuH,IAAA,OAAAhB,IAAAsC,MAAAtI,EAAAuF,EAAAyD,YAAAhD,EAAAF,MAAA9F,EAAAiJ,KAAA1D,EAAA2D,QAAA,WAAAlJ,EAAAuI,SAAAvI,EAAAuI,OAAA,OAAAvI,EAAAgH,IAAAxB,GAAAxF,EAAAwI,SAAA,KAAAnB,GAAArB,GAAAhG,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAA,IAAA+B,UAAA,oCAAA/I,EAAAwI,SAAA,KAAAnB,GAAA,SAAA8B,EAAA3D,GAAA,IAAAD,EAAA,CAAA6D,OAAA5D,EAAA,SAAAA,IAAAD,EAAA8D,SAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,WAAA9D,EAAA,GAAAD,EAAAgE,SAAA/D,EAAA,SAAAgE,WAAAC,KAAAlE,GAAA,SAAAmE,EAAAlE,GAAA,IAAAD,EAAAC,EAAAmE,YAAA,GAAApE,EAAAjC,KAAA,gBAAAiC,EAAAyB,IAAAxB,EAAAmE,WAAApE,EAAA,SAAAsB,EAAArB,GAAA,KAAAgE,WAAA,EAAAJ,OAAA,SAAA5D,EAAAsC,QAAAqB,EAAA,WAAAS,OAAA,YAAAhC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAvF,EAAAuF,EAAAS,GAAA,GAAAhG,EAAA,OAAAA,EAAAiH,KAAA1B,GAAA,sBAAAA,EAAA0D,KAAA,OAAA1D,EAAA,IAAAsE,MAAAtE,EAAAtE,QAAA,KAAAiC,GAAA,EAAAzD,EAAA,SAAAwJ,IAAA,OAAA/F,EAAAqC,EAAAtE,QAAA,GAAA0E,EAAAsB,KAAA1B,EAAArC,GAAA,OAAA+F,EAAAnD,MAAAP,EAAArC,GAAA+F,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAnD,MAAAN,EAAAyD,EAAAX,MAAA,EAAAW,GAAA,OAAAxJ,EAAAwJ,KAAAxJ,GAAA,UAAAsJ,iBAAAxD,EAAA,2BAAA+B,EAAA5B,UAAA6B,EAAArE,EAAAE,EAAA,eAAA0C,MAAAyB,EAAAf,cAAA,IAAAtD,EAAAqE,EAAA,eAAAzB,MAAAwB,EAAAd,cAAA,IAAAc,EAAAwC,YAAAxD,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAAwE,oBAAA,SAAAvE,GAAA,IAAAD,EAAA,mBAAAC,KAAAwE,YAAA,QAAAzE,QAAA+B,GAAA,uBAAA/B,EAAAuE,aAAAvE,EAAA0E,QAAA1E,EAAA2E,KAAA,SAAA1E,GAAA,OAAAC,OAAA0E,eAAA1E,OAAA0E,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAxD,GAAAoC,GAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAG,EAAAtC,WAAAY,EAAA0B,EAAAtC,UAAAQ,GAAA,0BAAAX,EAAAyC,gBAAAzC,EAAA+E,MAAA,SAAA9E,EAAAxF,EAAA2F,EAAAzC,EAAAzD,QAAA,IAAAA,MAAAS,SAAA,IAAA8F,EAAA,IAAAgC,EAAAtB,EAAAlB,EAAAxF,EAAA2F,EAAAzC,GAAAzD,GAAA,OAAA8F,EAAAwE,oBAAA/J,GAAAgG,IAAAiD,OAAAd,MAAA,SAAA3C,GAAA,OAAAA,EAAA8C,KAAA9C,EAAAM,MAAAE,EAAAiD,WAAApB,EAAAzE,GAAAkD,EAAAlD,EAAAgD,EAAA,aAAAE,EAAAlD,EAAA4C,GAAA,0BAAAM,EAAAlD,EAAA,qDAAAmC,EAAA1D,KAAA,SAAA2D,GAAA,IAAAD,EAAAE,OAAAD,GAAAxF,EAAA,WAAA2F,KAAAJ,EAAAvF,EAAAyJ,KAAA9D,GAAA,OAAA3F,EAAAuK,UAAA,SAAAtB,IAAA,KAAAjJ,EAAAiB,QAAA,KAAAuE,EAAAxF,EAAAwK,MAAA,GAAAhF,KAAAD,EAAA,OAAA0D,EAAAnD,MAAAN,EAAAyD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1D,EAAAqC,SAAAf,EAAAnB,UAAA,CAAAsE,YAAAnD,EAAA+C,MAAA,SAAArE,GAAA,QAAAkF,KAAA,OAAAxB,KAAA,OAAAP,KAAA,KAAAC,MAAAnD,EAAA,KAAA8C,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAvB,IAAAxB,EAAA,KAAAgE,WAAA1B,QAAA4B,IAAAnE,EAAA,QAAAvF,KAAA,WAAAA,EAAA0K,OAAA,IAAA/E,EAAAsB,KAAA,KAAAjH,KAAA6J,OAAA7J,EAAA2K,MAAA,WAAA3K,GAAAwF,IAAA3B,KAAA,gBAAAyE,MAAA,MAAA9C,EAAA,KAAAgE,WAAA,GAAAG,WAAA,aAAAnE,EAAAlC,KAAA,MAAAkC,EAAAwB,IAAA,YAAA4D,MAAAhC,kBAAA,SAAArD,GAAA,QAAA+C,KAAA,MAAA/C,EAAA,IAAAvF,EAAA,cAAA6K,EAAAlF,EAAAzC,GAAA,OAAA8C,EAAA1C,KAAA,QAAA0C,EAAAgB,IAAAzB,EAAAvF,EAAAiJ,KAAAtD,EAAAzC,IAAAlD,EAAAuI,OAAA,OAAAvI,EAAAgH,IAAAxB,KAAAtC,EAAA,QAAAA,EAAA,KAAAsG,WAAAvI,OAAA,EAAAiC,GAAA,IAAAA,EAAA,KAAAzD,EAAA,KAAA+J,WAAAtG,GAAA8C,EAAAvG,EAAAkK,WAAA,YAAAlK,EAAA2J,OAAA,OAAAyB,EAAA,UAAApL,EAAA2J,QAAA,KAAAqB,KAAA,KAAAvE,EAAAP,EAAAsB,KAAAxH,EAAA,YAAA2G,EAAAT,EAAAsB,KAAAxH,EAAA,iBAAAyG,GAAAE,EAAA,SAAAqE,KAAAhL,EAAA4J,SAAA,OAAAwB,EAAApL,EAAA4J,UAAA,WAAAoB,KAAAhL,EAAA6J,WAAA,OAAAuB,EAAApL,EAAA6J,iBAAA,GAAApD,GAAA,QAAAuE,KAAAhL,EAAA4J,SAAA,OAAAwB,EAAApL,EAAA4J,UAAA,YAAAjD,EAAA,UAAAiC,MAAA,kDAAAoC,KAAAhL,EAAA6J,WAAA,OAAAuB,EAAApL,EAAA6J,gBAAAT,OAAA,SAAArD,EAAAD,GAAA,QAAAvF,EAAA,KAAAwJ,WAAAvI,OAAA,EAAAjB,GAAA,IAAAA,EAAA,KAAAkD,EAAA,KAAAsG,WAAAxJ,GAAA,GAAAkD,EAAAkG,QAAA,KAAAqB,MAAA9E,EAAAsB,KAAA/D,EAAA,oBAAAuH,KAAAvH,EAAAoG,WAAA,KAAA7J,EAAAyD,EAAA,OAAAzD,IAAA,UAAA+F,GAAA,aAAAA,IAAA/F,EAAA2J,QAAA7D,MAAA9F,EAAA6J,aAAA7J,EAAA,UAAAuG,EAAAvG,IAAAkK,WAAA,UAAA3D,EAAA1C,KAAAkC,EAAAQ,EAAAgB,IAAAzB,EAAA9F,GAAA,KAAA8I,OAAA,YAAAU,KAAAxJ,EAAA6J,WAAAjC,GAAA,KAAAyD,SAAA9E,IAAA8E,SAAA,SAAAtF,EAAAD,GAAA,aAAAC,EAAAlC,KAAA,MAAAkC,EAAAwB,IAAA,gBAAAxB,EAAAlC,MAAA,aAAAkC,EAAAlC,KAAA,KAAA2F,KAAAzD,EAAAwB,IAAA,WAAAxB,EAAAlC,MAAA,KAAAsH,KAAA,KAAA5D,IAAAxB,EAAAwB,IAAA,KAAAuB,OAAA,cAAAU,KAAA,kBAAAzD,EAAAlC,MAAAiC,IAAA,KAAA0D,KAAA1D,GAAA8B,GAAA0D,OAAA,SAAAvF,GAAA,QAAAD,EAAA,KAAAiE,WAAAvI,OAAA,EAAAsE,GAAA,IAAAA,EAAA,KAAAvF,EAAA,KAAAwJ,WAAAjE,GAAA,GAAAvF,EAAAsJ,aAAA9D,EAAA,YAAAsF,SAAA9K,EAAA2J,WAAA3J,EAAAuJ,UAAAG,EAAA1J,GAAAqH,IAAA2D,MAAA,SAAAxF,GAAA,QAAAD,EAAA,KAAAiE,WAAAvI,OAAA,EAAAsE,GAAA,IAAAA,EAAA,KAAAvF,EAAA,KAAAwJ,WAAAjE,GAAA,GAAAvF,EAAAoJ,SAAA5D,EAAA,KAAAG,EAAA3F,EAAA2J,WAAA,aAAAhE,EAAArC,KAAA,KAAAJ,EAAAyC,EAAAqB,IAAA0C,EAAA1J,GAAA,OAAAkD,GAAA,UAAAmF,MAAA,0BAAA4C,cAAA,SAAA1F,EAAAvF,EAAA2F,GAAA,YAAA6C,SAAA,CAAAvC,SAAA2B,EAAArC,GAAAyD,WAAAhJ,EAAAkJ,QAAAvD,GAAA,cAAA4C,SAAA,KAAAvB,IAAAxB,GAAA6B,IAAA9B,EAKA,IAAI/G,GAAc,EAClB,GAAIC,IAAUC,aAAc,CAC1B,IAAMC,EAAWC,OAAOC,QAAQ,YAChCL,EAAeG,EAASH,YAiGX0M,IAjFA,WACb5K,SAAS6K,MAAQ/F,IACjB,IAAIgG,EAAM,iEAAAnM,OAEL+F,IAAKqG,aAAaH,OAAM,uFAO7B,MAAO,CACL5H,KAAM,uBACNgI,SALaC,YAAaH,GAAQ,GACrBtM,cAKb0M,QAAS,CAAExG,IAAKyG,OAAOC,SAASC,QAChCC,qBAAqB,EACrBC,QAAS,WAAO,IAADC,EAGPC,EAAgB/J,UAAQK,KAAK2J,MAAMpE,SAAS,GAAGqE,eAEjDf,EAAS5K,SAASC,eAAe,UAG/B2L,EAAe,SAASC,EAAQC,GACpCxJ,QAAQC,IAAIsJ,GACK,kBAAbC,IACFlB,EAAOmB,UAAYF,GAIrB,IACMG,EAAiB,GACvB1N,OAAOwN,GAAY,IAAIG,cAAcJ,EAFrB,CAACK,SAAU,eAI3B5N,OAAOwN,GAAUK,iBAAiB,iBAAiB,SAASlH,GACtDA,EAAElD,KAAKqK,KAAO,GAChBJ,EAAe7C,KAAKlE,EAAElD,SAI1BzD,OAAOwN,GAAUK,iBAAiB,QAAQ,YAtDlD,SAAkBE,EAAMC,EAAOb,GAC7B,IAAIc,EAAS,IAAIC,WACbC,EAAQ,OAAA9N,OAAS8M,EAAa,KAAA9M,OAAI2N,EAAK,KAAA3N,OAAI+N,KAAKC,MAAK,SACzDJ,EAAOK,OAAS,WACZ,GAA0B,IAAtBL,EAAOM,WAAkB,CACzB,IAAIC,EAAS,IAAIC,EAAOR,EAAOS,QAC/B9O,EAAYuB,KAAK,aAAcgN,EAAUK,GACzCxK,QAAQC,IAAI,UAAD5D,OAAWsD,KAAKgL,UAAU,CAAER,WAAUL,KAAMC,EAAKD,WAGpEG,EAAOW,kBAAkBb,GA8CjBc,CADa,IAAIC,KAAKpB,GACPF,EAAUL,OAK7B4B,UAAUC,aAAaC,aAAa,CAAEC,OAAO,IACxC3F,MAAK,SAACgE,GAAM,OAAKD,EAAaC,EAAQ,oBAEfvN,OAAOC,QAAQ,YAAnCkP,gBAEQC,WAAW,CAAEC,MAAO,CAAC,YAAa9F,MAAK,SAAD+F,GAAA,OAAApC,KAAAqC,YAAA7I,IAAA4E,MAAC,SAAAkE,EAAMC,GAAO,IAAAC,EAAAC,EAAAC,EAAA,OAAAlJ,IAAAoB,MAAA,SAAA+H,GAAA,cAAAA,EAAAhE,KAAAgE,EAAAxF,MAAA,OAAAqF,EAAAI,YAC7CL,GAAO,IAA5B,IAAAC,EAAAlH,MAAAmH,EAAAD,EAAA3I,KAAA2C,OAAWkG,EAAMD,EAAAzI,OACJmE,OAAS7E,KAClBuI,UAAUC,aAAaC,aAAa,CAClCC,MAAO,CACLa,UAAW,CACTC,kBAAmB,UACnBC,oBAAqBL,EAAOM,OAG/B3G,MAAK,SAAAgE,GACND,EAAaC,EAAQ,oBAEtBnB,OAAM,SAAA+D,GAAK,OAAInM,QAAQC,IAAIkM,MAE/B,MAAAC,GAAAV,EAAA/I,EAAAyJ,GAAA,QAAAV,EAAAnH,IAAA,wBAAAsH,EAAA5K,UAAAuK,QACFa,MAAA,KAAAC,eAGHC,UAAW,WACL1Q,IAAUoG,aACZjG,OAAOwQ,cAAcxL,QACrBhF,OAAOyQ,cAAczL,c,6q1FCpG7B,IAAI9B,EAAM,CACT,+BAAgC,GAChC,gCAAiC,IAIlC,SAASwN,EAAeC,GACvB,IAAIT,EAAKU,EAAsBD,GAC/B,OAAOE,EAAoBX,GAE5B,SAASU,EAAsBD,GAC9B,IAAIE,EAAoBvM,EAAEpB,EAAKyN,GAAM,CACpC,IAAIhK,EAAI,IAAI8C,MAAM,uBAAyBkH,EAAM,KAEjD,MADAhK,EAAEmK,KAAO,mBACHnK,EAEP,OAAOzD,EAAIyN,GAEZD,EAAezN,KAAO,WACrB,OAAO4D,OAAO5D,KAAKC,IAEpBwN,EAAenP,QAAUqP,EACzB1L,EAAOC,QAAUuL,EACjBA,EAAeR,GAAK,I,mBCvBpBhL,EAAOC,QAAU,IAA0B,oD,mBCA3CD,EAAOC,QAAU,IAA0B,qD,i7GC6E5B4L,I,EAAAA,EAzEf,SAAc7D,GAAiE,IAA9D8D,EAAO9D,EAAP8D,QAASC,EAAgB/D,EAAhB+D,iBAAkBC,EAAUhE,EAAVgE,WAAYC,EAAkBjE,EAAlBiE,mBAEtDC,EAAwCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7CjE,EAAamE,EAAA,GAAEE,EAAcF,EAAA,GACpCG,EAA4BJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAAjCE,EAAOD,EAAA,GAAEE,EAAQF,EAAA,GACxBG,EAA0BR,oBAAS,GAAMS,EAAAP,YAAAM,EAAA,GAAlC1B,EAAK2B,EAAA,GAAEC,EAAQD,EAAA,GA4BtB,OA1BAE,qBAAU,WAERR,EAAeP,GACfW,EAASV,KACR,CAACD,EAAkBC,IAuBpBe,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,YACZhC,EACC8B,IAAAC,cAAA,OAAKC,UAAU,qBAAqBC,KAAK,SAAQ,gDAG/C,KACJH,IAAAC,cAACG,IAAI,CAACF,UAAU,eAAeG,SAtBrC,SAAsB3L,GACpBA,EAAE4L,iBAEFpB,EAAmBhE,EAAewE,GAEjCpI,MAAK,SAACiJ,GACDA,EACFxB,EAAQwB,EAAUb,EAASxE,GAE3B4E,GAAS,QAcPE,IAAAC,cAACG,IAAKI,MAAK,CAACN,UAAU,YAAYrE,KAAK,KAAK4E,UAAU,iBACpDT,IAAAC,cAACG,IAAKM,MAAK,KAAC,kBACZV,IAAAC,cAACG,IAAKO,QAAO,CACXC,WAAS,EACTnO,KAAK,gBACLwC,MAAOiG,EACP2F,SAAU,SAACnM,GAAC,OAAK6K,EAAe7K,EAAEoM,OAAO7L,WAG7C+K,IAAAC,cAACG,IAAKI,MAAK,CAACN,UAAU,YAAYrE,KAAK,KAAK4E,UAAU,WACpDT,IAAAC,cAACG,IAAKM,MAAK,KAAC,YACZV,IAAAC,cAACG,IAAKO,QAAO,CACXlO,KAAK,UACLwC,MAAOyK,EACPmB,SAAU,SAACnM,GAAC,OAAKiL,EAASjL,EAAEoM,OAAO7L,WAGvC+K,IAAAC,cAACc,IAAM,CACLC,MAAO,CAAEC,MAAO,QAChBC,OAAK,EACLrF,KAAK,KACLpJ,KAAK,SACL0O,WAjDDjG,EAAc9K,OAAS,GAAKsP,EAAQtP,OAAS,IAkD7C,c,kDCnEXqE,EAAA,kBAAAC,GAAA,IAAAC,EAAAD,EAAA,GAAAvF,EAAAyF,OAAAC,UAAAC,EAAA3F,EAAA4F,eAAA1C,EAAAuC,OAAAI,gBAAA,SAAAL,EAAAD,EAAAvF,GAAAwF,EAAAD,GAAAvF,EAAA8F,OAAArG,EAAA,mBAAAsG,cAAA,GAAAC,EAAAvG,EAAAwG,UAAA,aAAAC,EAAAzG,EAAA0G,eAAA,kBAAAC,EAAA3G,EAAA4G,aAAA,yBAAAC,EAAAd,EAAAD,EAAAvF,GAAA,OAAAyF,OAAAI,eAAAL,EAAAD,EAAA,CAAAO,MAAA9F,EAAAuG,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,GAAA,IAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAvF,GAAA,OAAAwF,EAAAD,GAAAvF,GAAA,SAAA0G,EAAAlB,EAAAD,EAAAvF,EAAA2F,GAAA,IAAAlG,EAAA8F,KAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAAnH,EAAAiG,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAzC,EAAA8C,EAAA,WAAAF,MAAAgB,EAAAtB,EAAAxF,EAAAkG,KAAAF,EAAA,SAAAe,EAAAvB,EAAAD,EAAAvF,GAAA,WAAAsD,KAAA,SAAA0D,IAAAxB,EAAAyB,KAAA1B,EAAAvF,IAAA,MAAAwF,GAAA,OAAAlC,KAAA,QAAA0D,IAAAxB,IAAAD,EAAAmB,OAAA,IAAAQ,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA3H,GAAA2F,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAvE,EAAAmE,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAK,EAAArC,GAAA,0BAAAsC,SAAA,SAAAvC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,SAAA,SAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAjI,EAAAkD,EAAAzD,EAAAuG,GAAA,IAAAE,EAAAa,EAAAvB,EAAAxF,GAAAwF,EAAAtC,GAAA,aAAAgD,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAc,IAAAE,EAAAd,EAAAN,MAAA,OAAAoB,GAAA,iBAAAA,GAAAvB,EAAAsB,KAAAC,EAAA,WAAA3B,EAAApF,QAAA+G,EAAAgB,SAAAC,MAAA,SAAA3C,GAAAyC,EAAA,OAAAzC,EAAA/F,EAAAuG,MAAA,SAAAR,GAAAyC,EAAA,QAAAzC,EAAA/F,EAAAuG,MAAAT,EAAApF,QAAA+G,GAAAiB,MAAA,SAAA3C,GAAAY,EAAAN,MAAAN,EAAA/F,EAAA2G,MAAA,SAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAA/F,EAAAuG,QAAAE,EAAAc,KAAA,IAAAhH,EAAAkD,EAAA,gBAAA4C,MAAA,SAAAN,EAAAG,GAAA,SAAAyC,IAAA,WAAA7C,GAAA,SAAAA,EAAAvF,GAAAiI,EAAAzC,EAAAG,EAAAJ,EAAAvF,MAAA,OAAAA,MAAAmI,KAAAC,YAAA,SAAAtB,EAAAvB,EAAAvF,EAAA2F,GAAA,IAAAzC,EAAAgE,EAAA,gBAAAzH,EAAAuG,GAAA,GAAA9C,IAAAiE,EAAA,UAAAkB,MAAA,mCAAAnF,IAAAkE,EAAA,cAAA3H,EAAA,MAAAuG,EAAA,OAAAF,MAAAN,EAAA8C,MAAA,OAAA3C,EAAA4C,OAAA9I,EAAAkG,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAA6C,SAAA,GAAAtC,EAAA,KAAAE,EAAAqC,EAAAvC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA4C,OAAA5C,EAAA+C,KAAA/C,EAAAgD,MAAAhD,EAAAqB,SAAA,aAAArB,EAAA4C,OAAA,IAAArF,IAAAgE,EAAA,MAAAhE,EAAAkE,EAAAzB,EAAAqB,IAAArB,EAAAiD,kBAAAjD,EAAAqB,SAAA,WAAArB,EAAA4C,QAAA5C,EAAAkD,OAAA,SAAAlD,EAAAqB,KAAA9D,EAAAiE,EAAA,IAAAK,EAAAT,EAAAxB,EAAAvF,EAAA2F,GAAA,cAAA6B,EAAAlE,KAAA,IAAAJ,EAAAyC,EAAA2C,KAAAlB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAAvB,MAAA0B,EAAAR,IAAAsB,KAAA3C,EAAA2C,MAAA,UAAAd,EAAAlE,OAAAJ,EAAAkE,EAAAzB,EAAA4C,OAAA,QAAA5C,EAAAqB,IAAAQ,EAAAR,OAAA,SAAAyB,EAAAlD,EAAAvF,GAAA,IAAA2F,EAAA3F,EAAAuI,OAAArF,EAAAqC,EAAAU,SAAAN,GAAA,GAAAzC,IAAAsC,EAAA,OAAAxF,EAAAwI,SAAA,eAAA7C,GAAAJ,EAAAU,SAAA6C,SAAA9I,EAAAuI,OAAA,SAAAvI,EAAAgH,IAAAxB,EAAAiD,EAAAlD,EAAAvF,GAAA,UAAAA,EAAAuI,SAAA,WAAA5C,IAAA3F,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAA,IAAA+B,UAAA,oCAAApD,EAAA,aAAA0B,EAAA,IAAA5H,EAAAsH,EAAA7D,EAAAqC,EAAAU,SAAAjG,EAAAgH,KAAA,aAAAvH,EAAA6D,KAAA,OAAAtD,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAAvH,EAAAuH,IAAAhH,EAAAwI,SAAA,KAAAnB,EAAA,IAAArB,EAAAvG,EAAAuH,IAAA,OAAAhB,IAAAsC,MAAAtI,EAAAuF,EAAAyD,YAAAhD,EAAAF,MAAA9F,EAAAiJ,KAAA1D,EAAA2D,QAAA,WAAAlJ,EAAAuI,SAAAvI,EAAAuI,OAAA,OAAAvI,EAAAgH,IAAAxB,GAAAxF,EAAAwI,SAAA,KAAAnB,GAAArB,GAAAhG,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAA,IAAA+B,UAAA,oCAAA/I,EAAAwI,SAAA,KAAAnB,GAAA,SAAA8B,EAAA3D,GAAA,IAAAD,EAAA,CAAA6D,OAAA5D,EAAA,SAAAA,IAAAD,EAAA8D,SAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,WAAA9D,EAAA,GAAAD,EAAAgE,SAAA/D,EAAA,SAAAgE,WAAAC,KAAAlE,GAAA,SAAAmE,EAAAlE,GAAA,IAAAD,EAAAC,EAAAmE,YAAA,GAAApE,EAAAjC,KAAA,gBAAAiC,EAAAyB,IAAAxB,EAAAmE,WAAApE,EAAA,SAAAsB,EAAArB,GAAA,KAAAgE,WAAA,EAAAJ,OAAA,SAAA5D,EAAAsC,QAAAqB,EAAA,WAAAS,OAAA,YAAAhC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAvF,EAAAuF,EAAAS,GAAA,GAAAhG,EAAA,OAAAA,EAAAiH,KAAA1B,GAAA,sBAAAA,EAAA0D,KAAA,OAAA1D,EAAA,IAAAsE,MAAAtE,EAAAtE,QAAA,KAAAiC,GAAA,EAAAzD,EAAA,SAAAwJ,IAAA,OAAA/F,EAAAqC,EAAAtE,QAAA,GAAA0E,EAAAsB,KAAA1B,EAAArC,GAAA,OAAA+F,EAAAnD,MAAAP,EAAArC,GAAA+F,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAnD,MAAAN,EAAAyD,EAAAX,MAAA,EAAAW,GAAA,OAAAxJ,EAAAwJ,KAAAxJ,GAAA,UAAAsJ,iBAAAxD,EAAA,2BAAA+B,EAAA5B,UAAA6B,EAAArE,EAAAE,EAAA,eAAA0C,MAAAyB,EAAAf,cAAA,IAAAtD,EAAAqE,EAAA,eAAAzB,MAAAwB,EAAAd,cAAA,IAAAc,EAAAwC,YAAAxD,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAAwE,oBAAA,SAAAvE,GAAA,IAAAD,EAAA,mBAAAC,KAAAwE,YAAA,QAAAzE,QAAA+B,GAAA,uBAAA/B,EAAAuE,aAAAvE,EAAA0E,QAAA1E,EAAA2E,KAAA,SAAA1E,GAAA,OAAAC,OAAA0E,eAAA1E,OAAA0E,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAxD,GAAAoC,GAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAG,EAAAtC,WAAAY,EAAA0B,EAAAtC,UAAAQ,GAAA,0BAAAX,EAAAyC,gBAAAzC,EAAA+E,MAAA,SAAA9E,EAAAxF,EAAA2F,EAAAzC,EAAAzD,QAAA,IAAAA,MAAAS,SAAA,IAAA8F,EAAA,IAAAgC,EAAAtB,EAAAlB,EAAAxF,EAAA2F,EAAAzC,GAAAzD,GAAA,OAAA8F,EAAAwE,oBAAA/J,GAAAgG,IAAAiD,OAAAd,MAAA,SAAA3C,GAAA,OAAAA,EAAA8C,KAAA9C,EAAAM,MAAAE,EAAAiD,WAAApB,EAAAzE,GAAAkD,EAAAlD,EAAAgD,EAAA,aAAAE,EAAAlD,EAAA4C,GAAA,0BAAAM,EAAAlD,EAAA,qDAAAmC,EAAA1D,KAAA,SAAA2D,GAAA,IAAAD,EAAAE,OAAAD,GAAAxF,EAAA,WAAA2F,KAAAJ,EAAAvF,EAAAyJ,KAAA9D,GAAA,OAAA3F,EAAAuK,UAAA,SAAAtB,IAAA,KAAAjJ,EAAAiB,QAAA,KAAAuE,EAAAxF,EAAAwK,MAAA,GAAAhF,KAAAD,EAAA,OAAA0D,EAAAnD,MAAAN,EAAAyD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1D,EAAAqC,SAAAf,EAAAnB,UAAA,CAAAsE,YAAAnD,EAAA+C,MAAA,SAAArE,GAAA,QAAAkF,KAAA,OAAAxB,KAAA,OAAAP,KAAA,KAAAC,MAAAnD,EAAA,KAAA8C,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAvB,IAAAxB,EAAA,KAAAgE,WAAA1B,QAAA4B,IAAAnE,EAAA,QAAAvF,KAAA,WAAAA,EAAA0K,OAAA,IAAA/E,EAAAsB,KAAA,KAAAjH,KAAA6J,OAAA7J,EAAA2K,MAAA,WAAA3K,GAAAwF,IAAA3B,KAAA,gBAAAyE,MAAA,MAAA9C,EAAA,KAAAgE,WAAA,GAAAG,WAAA,aAAAnE,EAAAlC,KAAA,MAAAkC,EAAAwB,IAAA,YAAA4D,MAAAhC,kBAAA,SAAArD,GAAA,QAAA+C,KAAA,MAAA/C,EAAA,IAAAvF,EAAA,cAAA6K,EAAAlF,EAAAzC,GAAA,OAAA8C,EAAA1C,KAAA,QAAA0C,EAAAgB,IAAAzB,EAAAvF,EAAAiJ,KAAAtD,EAAAzC,IAAAlD,EAAAuI,OAAA,OAAAvI,EAAAgH,IAAAxB,KAAAtC,EAAA,QAAAA,EAAA,KAAAsG,WAAAvI,OAAA,EAAAiC,GAAA,IAAAA,EAAA,KAAAzD,EAAA,KAAA+J,WAAAtG,GAAA8C,EAAAvG,EAAAkK,WAAA,YAAAlK,EAAA2J,OAAA,OAAAyB,EAAA,UAAApL,EAAA2J,QAAA,KAAAqB,KAAA,KAAAvE,EAAAP,EAAAsB,KAAAxH,EAAA,YAAA2G,EAAAT,EAAAsB,KAAAxH,EAAA,iBAAAyG,GAAAE,EAAA,SAAAqE,KAAAhL,EAAA4J,SAAA,OAAAwB,EAAApL,EAAA4J,UAAA,WAAAoB,KAAAhL,EAAA6J,WAAA,OAAAuB,EAAApL,EAAA6J,iBAAA,GAAApD,GAAA,QAAAuE,KAAAhL,EAAA4J,SAAA,OAAAwB,EAAApL,EAAA4J,UAAA,YAAAjD,EAAA,UAAAiC,MAAA,kDAAAoC,KAAAhL,EAAA6J,WAAA,OAAAuB,EAAApL,EAAA6J,gBAAAT,OAAA,SAAArD,EAAAD,GAAA,QAAAvF,EAAA,KAAAwJ,WAAAvI,OAAA,EAAAjB,GAAA,IAAAA,EAAA,KAAAkD,EAAA,KAAAsG,WAAAxJ,GAAA,GAAAkD,EAAAkG,QAAA,KAAAqB,MAAA9E,EAAAsB,KAAA/D,EAAA,oBAAAuH,KAAAvH,EAAAoG,WAAA,KAAA7J,EAAAyD,EAAA,OAAAzD,IAAA,UAAA+F,GAAA,aAAAA,IAAA/F,EAAA2J,QAAA7D,MAAA9F,EAAA6J,aAAA7J,EAAA,UAAAuG,EAAAvG,IAAAkK,WAAA,UAAA3D,EAAA1C,KAAAkC,EAAAQ,EAAAgB,IAAAzB,EAAA9F,GAAA,KAAA8I,OAAA,YAAAU,KAAAxJ,EAAA6J,WAAAjC,GAAA,KAAAyD,SAAA9E,IAAA8E,SAAA,SAAAtF,EAAAD,GAAA,aAAAC,EAAAlC,KAAA,MAAAkC,EAAAwB,IAAA,gBAAAxB,EAAAlC,MAAA,aAAAkC,EAAAlC,KAAA,KAAA2F,KAAAzD,EAAAwB,IAAA,WAAAxB,EAAAlC,MAAA,KAAAsH,KAAA,KAAA5D,IAAAxB,EAAAwB,IAAA,KAAAuB,OAAA,cAAAU,KAAA,kBAAAzD,EAAAlC,MAAAiC,IAAA,KAAA0D,KAAA1D,GAAA8B,GAAA0D,OAAA,SAAAvF,GAAA,QAAAD,EAAA,KAAAiE,WAAAvI,OAAA,EAAAsE,GAAA,IAAAA,EAAA,KAAAvF,EAAA,KAAAwJ,WAAAjE,GAAA,GAAAvF,EAAAsJ,aAAA9D,EAAA,YAAAsF,SAAA9K,EAAA2J,WAAA3J,EAAAuJ,UAAAG,EAAA1J,GAAAqH,IAAA2D,MAAA,SAAAxF,GAAA,QAAAD,EAAA,KAAAiE,WAAAvI,OAAA,EAAAsE,GAAA,IAAAA,EAAA,KAAAvF,EAAA,KAAAwJ,WAAAjE,GAAA,GAAAvF,EAAAoJ,SAAA5D,EAAA,KAAAG,EAAA3F,EAAA2J,WAAA,aAAAhE,EAAArC,KAAA,KAAAJ,EAAAyC,EAAAqB,IAAA0C,EAAA1J,GAAA,OAAAkD,GAAA,UAAAmF,MAAA,0BAAA4C,cAAA,SAAA1F,EAAAvF,EAAA2F,GAAA,YAAA6C,SAAA,CAAAvC,SAAA2B,EAAArC,GAAAyD,WAAAhJ,EAAAkJ,QAAAvD,GAAA,cAAA4C,SAAA,KAAAvB,IAAAxB,GAAA6B,IAAA9B,EAEA1G,EAAQ,IAAUwF,SAGlB,IAIIA,EAAS,CACX4N,OAAQvN,qMAAYwN,iBACpBC,WAAYzN,qMAAY0N,qBACxBC,YAAa3N,qMAAY4N,sBACzBC,UAAW7N,qMAAY8N,qBAAuB,cAC9CC,cAAe/N,qMAAYgO,wBAC3BC,kBAAmBjO,qMAAYkO,4BAC/BC,MAAOnO,qMAAYoO,iBAKjBC,EAAKC,IAASC,cAAc5O,GAAQ6O,YAGP,cAA7BtU,OAAOiC,SAASsS,UAClBJ,EAAGK,YAAY,YAAa,MAI9B,IAkBMC,EAAqB,SAACC,EAASC,GACnC,OAAOR,EACJS,WA3C8B,sBA4C9BC,IAAIH,GACJE,WAAW,UACXC,IAAIF,GACJvH,MACA7D,MAAK,SAACsL,GACL,OAAIA,EAAIC,OACCnR,KAAKC,MAAMiR,EAAIpR,OAAOgC,SAE7BzB,QAAQC,IAAI,YAAD5D,OAAasU,EAAa,qBAC9B,MAGVvI,OAAM,SAAC+D,GAAK,OAAKnM,QAAQC,IAAI,2BAA4BkM,OASxD4E,EAAe,SAAAzF,EAAA0F,GAAA,OAAA9H,KAAAqC,YAAA7I,IAAA4E,MAAG,SAAAkE,EAAOkF,EAASC,GAAa,IAAAM,EAAAC,EAAA,OAAAxO,IAAAoB,MAAA,SAAA+H,GAAA,cAAAA,EAAAhE,KAAAgE,EAAAxF,MAAA,cAAAwF,EAAAxF,KAAA,EAC7BoK,EAAmBC,EAASC,GAAe,KAAD,EAAnD,OAAPM,EAAOpF,EAAA/F,KAAA+F,EAAAxF,KAAA,EACeoK,EAAmBC,EAAS,WAAW,KAAD,EAA/C,GAAbQ,EAAarF,EAAA/F,MAEfmL,IAAWC,EAAa,CAAArF,EAAAxF,KAAA,gBAAAwF,EAAA5F,OAAA,SAAAkL,wBAAA,GACfD,GAAkBD,IAAO,eAAApF,EAAA5F,OAAA,UAE7B,GAAK,yBAAA4F,EAAA5K,UAAAuK,QAEfa,MAAA,KAAAC,Y,GA2Bc8D,EAAQ,E,qBC9FRgB,EAVS,WAGtB,MAAO,CACL1Q,KAAM,uBACNgI,SAJaC,YAAa,OAADtM,OAAQ+F,IAAKiP,KAAKhK,KAAI,UAAS,GAAQnL,cAKhE0M,QAAS,CAACxG,IAAKyG,OAAOC,SAASC,UCSpBuI,EAdG,WAGf,MAAO,CACN5Q,KAAM,yBACNgI,SAJaC,YAAa,OAADtM,OAAQ+F,IAAKyG,OAAO0I,WAAU,UAAS,GAAQrV,cAKxEsV,eAAgB,IAChBvI,QAAS,WACP3M,YAAaG,IAAWC,WACxBwD,YAAKC,QCXLsR,EAAY9I,YAAa,6CAADtM,OAEpB+F,IAAKqG,aAAaiJ,QAAO,kBAAArV,OAC1B+F,IAAKqG,aAAakJ,GAAE,iBAAAtV,OACpB+F,IAAKqG,aAAamJ,GAAE,2BAEtB,GAEDC,EAAYlJ,YAAa,4CAADtM,OAErB+F,IAAKqG,aAAaqJ,GAAE,iBAAAzV,OACpB+F,IAAKqG,aAAasJ,GAAE,2BAEtB,GAEDC,EAAcrJ,YAAa,4CAADtM,OAEvB+F,IAAKqG,aAAawJ,GAAE,iBAAA5V,OACpB+F,IAAKqG,aAAayJ,KAAI,iBAAA7V,OACtB+F,IAAKqG,aAAa0J,UAAS,2BAE7B,GAEDC,EAAazJ,YAAa,4CAADtM,OAEtB+F,IAAKqG,aAAa4J,OAAM,iBAAAhW,OACxB+F,IAAKqG,aAAa6J,KAAI,iBAAAjW,OACtB+F,IAAKqG,aAAa8J,UAAS,2BAE7B,GAEDC,EAAa7J,YAAa,4CAADtM,OAEtB+F,IAAKqG,aAAa4J,OAAM,iBAAAhW,OACxB+F,IAAKqG,aAAagK,KAAI,iBAAApW,OACtB+F,IAAKqG,aAAaiK,YAAW,2BAE/B,GAEDC,EAAYhK,YAAa,4CAADtM,OAErB+F,IAAKqG,aAAa4J,OAAM,iBAAAhW,OACxB+F,IAAKqG,aAAamK,KAAI,iBAAAvW,OACtB+F,IAAKqG,aAAa0J,UAAS,2BAE7B,GAEDU,EAAclK,YAAa,4CAADtM,OAEvB+F,IAAKqG,aAAa4J,OAAM,iBAAAhW,OACxB+F,IAAKqG,aAAaqK,KAAI,iBAAAzW,OACtB+F,IAAKqG,aAAa8J,UAAS,2BAE7B,GAEDQ,EAAcpK,YAAa,4CAADtM,OAEvB+F,IAAKqG,aAAa4J,OAAM,iBAAAhW,OACxB+F,IAAKqG,aAAauK,KAAI,iBAAA3W,OACtB+F,IAAKqG,aAAaiK,YAAW,2BAE/B,GAEDO,EAActK,YAAa,4CAADtM,OAEvB+F,IAAKqG,aAAa4J,OAAM,iBAAAhW,OACxB+F,IAAKqG,aAAayK,KAAI,iBAAA7W,OACtB+F,IAAKqG,aAAa0J,UAAS,2BAE7B,GAEDgB,EAAaxK,YAAa,4CAADtM,OAEtB+F,IAAKqG,aAAa4J,OAAM,iBAAAhW,OACxB+F,IAAKqG,aAAa2K,KAAI,iBAAA/W,OACtB+F,IAAKqG,aAAa8J,UAAS,2BAE7B,GAEDc,EAAe1K,YAAa,4CAADtM,OAExB+F,IAAKqG,aAAa4J,OAAM,iBAAAhW,OACxB+F,IAAKqG,aAAa6K,KAAI,iBAAAjX,OACtB+F,IAAKqG,aAAaiK,YAAW,2BAE/B,GAEDa,EAAe5K,YAAa,4CAADtM,OAExB+F,IAAKqG,aAAa+K,GAAE,iBAAAnX,OACpB+F,IAAKqG,aAAagL,GAAE,iBAAApX,OACpB+F,IAAKqG,aAAaiL,GAAE,2BAEtB,GAEDC,EAAiBhL,YAAa,4CAADtM,OAE1B+F,IAAKqG,aAAamL,GAAE,iBAAAvX,OACpB+F,IAAKqG,aAAaoL,IAAG,iBAAAxX,OACrB+F,IAAKqG,aAAaqL,IAAG,2BAEvB,GAEDC,EAAiBpL,YAAa,4CAADtM,OAE1B+F,IAAKqG,aAAauL,IAAG,iBAAA3X,OACrB+F,IAAKqG,aAAawL,IAAG,iBAAA5X,OACrB+F,IAAKqG,aAAayL,IAAG,iBAAA7X,OACrB+F,IAAKqG,aAAa0L,IAAG,2BAEvB,GAEDC,EAAgBzL,YAAa,4CAADtM,OAEzB+F,IAAKqG,aAAa4L,gBAAe,2BAEnC,GA+BQ5L,EA7BM,WACnB,IAAI6L,EAAK,CACP7C,EACAI,EACAG,EACAI,EACAI,EACAG,EACAE,EACAE,EACAE,EACAE,EACAE,EACAE,EACAI,EACAI,EACAK,GAKF,OAFIvY,IAAUC,eAAiBD,IAAUsG,SAASmS,EAAGC,OAAO,GAAG,GAExD,CACL7T,KAAM,eACN8T,MAAOF,EACPG,oBAAoB,IChITC,EAbM,WAMlB,MAAO,CACNhU,KAAM,uBACNgI,SAPaC,YAAa,oDAADtM,OAEf+F,IAAKyG,OAAO8L,MAAK,oBACpB,GAAQzY,cAKf0M,QAAS,CAACxG,IAAKyG,OAAOC,SAASC,UCKpB6L,EAfM,WAOjB,MAAO,CACHlU,KAAM,yBACNgI,SARaC,YAAa,6CAADtM,OAEvB+F,IAAKqG,aAAaoM,cAAa,4BAElC,GAKChM,OAASzG,IAAKyG,OAAOC,SAASgM,MAC9B9L,qBAAqB,I,QCAd+L,EAVG,WACd,MAAO,CACLrU,KAAM,cACNsU,UAAW,CAAC,CAAEnM,OAAQF,YAAa,OAADtM,OAAQ+F,IAAK6S,aAAaC,IAAG,UAAS,GAAOhS,MAAO,IACtFqJ,UAAW,SAAC9M,GACVD,YAAeC,MCAnB6U,EAAK,CAAClD,KACNvV,IAAU4G,YACZ6R,EAAGzN,KAAK+N,KAEN/Y,IAAUO,gBACZkY,EAAGzN,KAAKkO,KAENlZ,IAAUsG,UACZmS,EAAGzN,KAAK6N,KACRJ,EAAGzN,KAAKyK,MAEVgD,EAAGzN,KAAK4B,KACJ5M,IAAUoG,YACZqS,EAAGzN,KAAKyB,eAGV,IAMe6M,EANE,CACfzU,KAAM,yBACNgI,SAAU,GACV0M,SAAUd,GCPGe,EAjBO,SAACC,GAGpB,MAAO,CACN5U,KAAM,yBACNgI,SAJaC,YAAa,OAADtM,OAAQ+F,IAAKiP,KAAKkE,IAAG,UAAS,GAAQrZ,cAK/DsV,eAAgB8D,EAChBrM,QAAS,WACHpN,IAAUoG,aACZjC,QAAQC,IAAI,YACZjE,OAAOwQ,cAAcvL,OACrBjF,OAAOyQ,cAAcxL,WCYdM,EArBE,SAACiU,GAChB,IAAI9M,ECPsB,oEDOIxM,cAExB4Q,EAAOrQ,IAAW8E,SACpB+T,EAAW7W,YAAO,IAAK,KAE3B,MAAO,CACLiC,KAAM,yBACNkI,QAASxJ,UAAQqW,QACjB/M,SAAUA,EACVM,qBAAqB,EAErBwI,eAAgB8D,EAChBrM,QAAS,WACPzL,YAAa,cACblB,YAAawQ,IAEfP,UAAW,SAAC9M,GAAI,OAAKA,EAAKqN,KAAOA,KEdtB4I,EATW,SAAChN,EAAUiN,EAAUC,GAC7C,OAAID,EACI,qDAANtZ,OAA4DqM,EAAQ,eAG9D,2EAANrM,OAAkFuZ,EAAI,IAAI,EAAC,SAAAvZ,OAAQqM,EAAQ,gBCwBhGmN,EAzBM,SAACL,EAAOM,GAC3B,IAAMhJ,EAAOrQ,IAAW+E,aACpBkH,EAAWgN,EAAkBF,EAAMO,SAAS,EAAOD,EAAiBE,oBAAsB9Z,cAC9F,MAAO,CACLwE,KAAM,qBACN8Q,eAAgBsE,EAAiBG,oBACjChN,QAAS,kBAAM3M,YAAawQ,IAC5BoJ,WAAY,GAAGV,EAAMW,QACrBC,yBAAyB,EACzBC,kBAAmB,IACnBC,gBAAiBZ,EAAkBtT,IAAKyG,OAAO8M,UAAU,EAAMG,EAAiBE,oBAAsB9Z,cACtGwM,SAAUA,EACVM,qBAAqB,EACrBuD,UAAW,SAAC9M,GACa,OAAnBA,EAAK8W,UACP9W,EAAK+W,QAAUhB,EAAMW,UAAY1W,EAAK8W,UAAY,GAGlD9W,EAAK+W,SAAU,EAEjB/W,EAAKqN,KAAOrN,EAAK8W,UAAY,MCgCpBE,GAnDE,SAACC,EAAUC,EAAYC,EAAcd,GACnD,MAAO,CACNpV,KAAM,yBACNgI,SAAU,GACVjJ,KAAM,CAACoX,gBAAiB,GACxBtK,UAAW,WACT,GAAI1Q,IAAUO,eAAe,CAC3B,IAAM0a,EAAS1X,UAAQK,KAAK2J,MAAM2N,KAAK,GAAG/R,SAAS,IAC9C0R,GAAYE,GAAgC,GAAlBE,EAAO/W,YACpCX,UAAQ4X,uBAIdC,SAAU,SAACzB,GACT,IAAM/V,EAAOL,UAAQK,KAAK2J,MAAM2N,KAAKJ,GAAY3R,SAC3CkS,EAAczX,EAAK0X,QAAO,SAACC,EAAaC,GAC5C,MAA4B,qBAAjBA,EAAKb,QACPY,EAGHC,EAAKb,QACAY,EAAc,EAGdA,IAGV,GAGH,GAFA5B,EAAM/V,KAAKoX,gBAAkB,IAAMK,EAAYzX,EAAKpB,OACpDmX,EAAM9M,SAAWC,YAAa,OAADtM,OAAQuC,KAAKC,MAAM2W,EAAM/V,KAAKoX,iBAAiBS,WAAW,IAAG,UAAS,GAAQpb,cACvGwa,EACElB,EAAM/V,KAAKoX,gBAAkBf,EAAiByB,gBAChD/B,EAAM3M,OAASzG,IAAKyG,OAAOC,SAAS0O,yBAA2B1B,EAAiByB,gBAAkBnV,IAAKyG,OAAOC,SAAS2O,yBAGvHjC,EAAM3M,OAASzG,IAAKyG,OAAOC,SAAS4O,qBAEjC,CACL,IAAMZ,EAAS1X,UAAQK,KAAK2J,MAAM2N,KAAK,GAAG/R,SAAS,GAC/CnJ,IAAUO,eACZoZ,EAAM3M,OAASzG,IAAKyG,OAAOC,SAASqG,OAASyH,EAAa,IAAIU,WAAalV,IAAKyG,OAAOC,SAAS6O,GAAKb,EAAO/W,WAAaqC,IAAKyG,OAAOC,SAAS8O,WAG9IpC,EAAM3M,OAASzG,IAAKyG,OAAOC,SAASqG,OAASyH,EAAa,IAAIU,WAAalV,IAAKyG,OAAOC,SAAS6O,GAAK,IAAMvV,IAAKyG,OAAOC,SAAS8O,aAItI/O,OAAQ,S,kBCpBGgP,GA1BG,SAACnB,EAAUZ,GAC5B,IAAM3G,EAAQuH,EAAWoB,GAAgBC,GACnCpB,EAAaD,EAAWvH,EAAM9Q,OAAS,GAc7C,MAAO,CACNqC,KAAM,yBACLgI,SAAU,GACX0M,SAhBcjG,EAAM6I,SAAS,SAACxC,GAC9B,OAAIA,EAAMyC,MAAQ,IAAM,EAChB1W,EAASiU,GAGZA,EAAMyC,MAAQ,KAAO,EACjB,CAACpC,EAAaL,EAAOM,GAAmBW,GAASC,EAAUC,EAAYnB,EAAMyC,MAAOnC,IAGpFD,EAAaL,EAAOM,MAQ7BoC,cAAe,SAACzY,GACf,OAAOiX,GAAYjX,EAAKuF,SAASvF,EAAKuF,SAAS3G,OAAS,GAAGwY,gBAAkBf,EAAiByB,mBCzB1F,SAASY,KAEd,IAAIC,EAAS,GAqNb,OAnNAA,EAAOC,KAAO,CACZhR,KAAM,kBACNiR,YAAa,GACbC,WAAY,CACV7P,SAAU,CACRhI,KAAMtB,UAAQoZ,QAAQC,cAAcC,YACpCC,YAAa,WACbC,aAASC,EACTP,YAAa,qCAEfpC,WAAY,CACVxV,KAAMtB,UAAQoZ,QAAQC,cAAcK,QACpCH,YAAa,aACbC,aAASC,EACTP,YAAa,6CAEf1P,QAAS,CACPlI,KAAMtB,UAAQoZ,QAAQC,cAAcK,QACpCH,YAAa,UACbC,QAASxZ,UAAQ2Z,SACjBC,OAAO,EACPV,YAAa,wEAEfW,YAAa,CACXvY,KAAMtB,UAAQoZ,QAAQC,cAAcS,OACpCP,YAAa,cACbC,QAAS,KACTN,YAAa,qDAEfa,aAAc,CACZzY,KAAMtB,UAAQoZ,QAAQC,cAAcS,OACpCP,YAAa,eACbC,QAAS,kCACTN,YAAa,gDAEfc,eAAgB,CACd1Y,KAAMtB,UAAQoZ,QAAQC,cAAcS,OACpCP,YAAa,iBACbC,QAAS,oCACTN,YAAa,kDAEfzP,OAAQ,CACNnI,KAAMtB,UAAQoZ,QAAQC,cAAcS,OACpCP,YAAa,SACbC,QAAS,KACTN,YAAa,0DAEfe,2BAA4B,CAC1B3Y,KAAMtB,UAAQoZ,QAAQC,cAAca,KACpCX,YAAa,6BACbC,SAAS,EACTN,YAAa,0HAEflC,wBAAyB,CACvB1V,KAAMtB,UAAQoZ,QAAQC,cAAca,KACpCV,SAAS,EACTW,aAAa,EACbjB,YAAa,IAEfkB,yBAA0B,CACxB9Y,KAAMtB,UAAQoZ,QAAQC,cAAca,KACpCX,YAAa,2BACbC,SAAS,EACTN,YAAa,wHAEfhC,gBAAiB,CACf5V,KAAMtB,UAAQoZ,QAAQC,cAAcS,OACpCP,YAAa,kBACbC,QAAS,gCACTN,YAAa,oDAEfmB,kBAAmB,CACjB/Y,KAAMtB,UAAQoZ,QAAQC,cAAciB,IACpCf,YAAa,oBACbC,QAAS,KACTN,YAAa,8BAEf9G,eAAgB,CACd9Q,KAAMtB,UAAQoZ,QAAQC,cAAciB,IACpCf,YAAa,iBACbC,QAAS,KACTN,YAAa,0BAEfjC,kBAAmB,CACjB3V,KAAMtB,UAAQoZ,QAAQC,cAAciB,IACpCf,YAAa,oBACbC,QAAS,IACTN,YAAa,gCAKnBF,EAAO5C,MAAQ,SAASmE,EAAiBnE,GAEvCmE,EAAgBC,UAAY,uFAAuFpE,EAAM9M,SAAS,SAGlG,OAA5B8M,EAAMiE,mBACRra,UAAQya,UAAU5c,YAAW,WAC3B0c,EAAgBG,cAAc,qCAAqC7K,MAAM8K,WAAa,WACrFvE,EAAMiE,mBAIU,OAAjBjE,EAAM3M,SACR8Q,EAAgBC,WAAapE,EAAM3M,QAGrC,IAAImR,EAAa,GAGbC,EAAiB,SAAS5B,GAG5BjZ,UAAQya,UAAUK,mBAGlB9a,UAAQya,UAAUM,6BAElB,IAAI3D,GAAU,EACVhB,EAAMU,aAAemC,EAAK+B,MAC5B5D,GAAU,GAIZwD,EAAa,CACX,GAAM3B,EAAKgC,GACX,QAAW7D,EACX,SAAYhB,EAAM9M,SAClB,UAAa2P,EAAK+B,KAGpBT,EAAgBC,UAAY,GAE5B,IAAIU,EAAqB,MAAXjC,EAAKgC,GACfC,EAyBN,SAAoB9D,EAAS8D,GAE3B,GAAIA,IAAY9E,EAAMgE,yBACpBG,EAAgBC,WAAapE,EAAMc,oBAC9B,CAEDd,EAAMY,0BACRuD,EAAgBC,UAAY,uFAAuFpE,EAAM9M,SAAS,UAIpI,IAAI6R,EAAQ,GAEVA,EADE/D,EACMhB,EAAM2D,aAAaqB,QAAQ,QAAShF,EAAMyD,aAE1CzD,EAAM4D,eAAeoB,QAAQ,QAAShF,EAAMyD,aAItDU,EAAgBC,WAAaW,EAG/B,GAAI/E,EAAM6D,6BAA0C,IAAZ7C,IAAuB8D,GAAW9E,EAAMgE,2BAA8Bc,GAAU,CAMtHlb,UAAQya,UAAUY,oBAAoB,CACpCC,kBAL0B,SAASrC,GACnCsC,KAKAC,gBAAiB,CAACpF,EAAMU,YACxB2E,UAAW,cACXC,SAAS,EACTC,gBAAgB,SAIlB3b,UAAQya,UAAU5c,YAAW,WAC3B0d,MACCnF,EAAMa,mBA/DT2E,CAAWxE,EAAS8D,GAGpBK,KAiEJ,SAASA,IACPhB,EAAgBC,UAAY,GAC5Bxa,UAAQ6b,YAAYjB,GA/DtB5a,UAAQya,UAAUY,oBAAoB,CACpCC,kBAAmBT,EACnBW,gBAAiBpF,EAAM5M,QACvBiS,UAAW,cACXC,SAAS,EACTC,gBAAgB,IAGW,OAAzBvF,EAAMhE,gBACRpS,UAAQya,UAAU5c,YAAW,WAC3Bgd,EAAe,CACbG,IAAK,KACLC,GAAI,SAEL7E,EAAMhE,iBAsDN4G,E,kDCxNT1V,GAAA,kBAAAC,GAAA,IAAAC,EAAAD,EAAA,GAAAvF,EAAAyF,OAAAC,UAAAC,EAAA3F,EAAA4F,eAAA1C,EAAAuC,OAAAI,gBAAA,SAAAL,EAAAD,EAAAvF,GAAAwF,EAAAD,GAAAvF,EAAA8F,OAAArG,EAAA,mBAAAsG,cAAA,GAAAC,EAAAvG,EAAAwG,UAAA,aAAAC,EAAAzG,EAAA0G,eAAA,kBAAAC,EAAA3G,EAAA4G,aAAA,yBAAAC,EAAAd,EAAAD,EAAAvF,GAAA,OAAAyF,OAAAI,eAAAL,EAAAD,EAAA,CAAAO,MAAA9F,EAAAuG,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,GAAA,IAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAvF,GAAA,OAAAwF,EAAAD,GAAAvF,GAAA,SAAA0G,EAAAlB,EAAAD,EAAAvF,EAAA2F,GAAA,IAAAlG,EAAA8F,KAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAAnH,EAAAiG,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAzC,EAAA8C,EAAA,WAAAF,MAAAgB,EAAAtB,EAAAxF,EAAAkG,KAAAF,EAAA,SAAAe,EAAAvB,EAAAD,EAAAvF,GAAA,WAAAsD,KAAA,SAAA0D,IAAAxB,EAAAyB,KAAA1B,EAAAvF,IAAA,MAAAwF,GAAA,OAAAlC,KAAA,QAAA0D,IAAAxB,IAAAD,EAAAmB,OAAA,IAAAQ,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA3H,GAAA2F,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAvE,EAAAmE,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAK,EAAArC,GAAA,0BAAAsC,SAAA,SAAAvC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,SAAA,SAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAjI,EAAAkD,EAAAzD,EAAAuG,GAAA,IAAAE,EAAAa,EAAAvB,EAAAxF,GAAAwF,EAAAtC,GAAA,aAAAgD,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAc,IAAAE,EAAAd,EAAAN,MAAA,OAAAoB,GAAA,iBAAAA,GAAAvB,EAAAsB,KAAAC,EAAA,WAAA3B,EAAApF,QAAA+G,EAAAgB,SAAAC,MAAA,SAAA3C,GAAAyC,EAAA,OAAAzC,EAAA/F,EAAAuG,MAAA,SAAAR,GAAAyC,EAAA,QAAAzC,EAAA/F,EAAAuG,MAAAT,EAAApF,QAAA+G,GAAAiB,MAAA,SAAA3C,GAAAY,EAAAN,MAAAN,EAAA/F,EAAA2G,MAAA,SAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAA/F,EAAAuG,QAAAE,EAAAc,KAAA,IAAAhH,EAAAkD,EAAA,gBAAA4C,MAAA,SAAAN,EAAAG,GAAA,SAAAyC,IAAA,WAAA7C,GAAA,SAAAA,EAAAvF,GAAAiI,EAAAzC,EAAAG,EAAAJ,EAAAvF,MAAA,OAAAA,MAAAmI,KAAAC,YAAA,SAAAtB,EAAAvB,EAAAvF,EAAA2F,GAAA,IAAAzC,EAAAgE,EAAA,gBAAAzH,EAAAuG,GAAA,GAAA9C,IAAAiE,EAAA,UAAAkB,MAAA,mCAAAnF,IAAAkE,EAAA,cAAA3H,EAAA,MAAAuG,EAAA,OAAAF,MAAAN,EAAA8C,MAAA,OAAA3C,EAAA4C,OAAA9I,EAAAkG,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAA6C,SAAA,GAAAtC,EAAA,KAAAE,EAAAqC,EAAAvC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA4C,OAAA5C,EAAA+C,KAAA/C,EAAAgD,MAAAhD,EAAAqB,SAAA,aAAArB,EAAA4C,OAAA,IAAArF,IAAAgE,EAAA,MAAAhE,EAAAkE,EAAAzB,EAAAqB,IAAArB,EAAAiD,kBAAAjD,EAAAqB,SAAA,WAAArB,EAAA4C,QAAA5C,EAAAkD,OAAA,SAAAlD,EAAAqB,KAAA9D,EAAAiE,EAAA,IAAAK,EAAAT,EAAAxB,EAAAvF,EAAA2F,GAAA,cAAA6B,EAAAlE,KAAA,IAAAJ,EAAAyC,EAAA2C,KAAAlB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAAvB,MAAA0B,EAAAR,IAAAsB,KAAA3C,EAAA2C,MAAA,UAAAd,EAAAlE,OAAAJ,EAAAkE,EAAAzB,EAAA4C,OAAA,QAAA5C,EAAAqB,IAAAQ,EAAAR,OAAA,SAAAyB,EAAAlD,EAAAvF,GAAA,IAAA2F,EAAA3F,EAAAuI,OAAArF,EAAAqC,EAAAU,SAAAN,GAAA,GAAAzC,IAAAsC,EAAA,OAAAxF,EAAAwI,SAAA,eAAA7C,GAAAJ,EAAAU,SAAA6C,SAAA9I,EAAAuI,OAAA,SAAAvI,EAAAgH,IAAAxB,EAAAiD,EAAAlD,EAAAvF,GAAA,UAAAA,EAAAuI,SAAA,WAAA5C,IAAA3F,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAA,IAAA+B,UAAA,oCAAApD,EAAA,aAAA0B,EAAA,IAAA5H,EAAAsH,EAAA7D,EAAAqC,EAAAU,SAAAjG,EAAAgH,KAAA,aAAAvH,EAAA6D,KAAA,OAAAtD,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAAvH,EAAAuH,IAAAhH,EAAAwI,SAAA,KAAAnB,EAAA,IAAArB,EAAAvG,EAAAuH,IAAA,OAAAhB,IAAAsC,MAAAtI,EAAAuF,EAAAyD,YAAAhD,EAAAF,MAAA9F,EAAAiJ,KAAA1D,EAAA2D,QAAA,WAAAlJ,EAAAuI,SAAAvI,EAAAuI,OAAA,OAAAvI,EAAAgH,IAAAxB,GAAAxF,EAAAwI,SAAA,KAAAnB,GAAArB,GAAAhG,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAA,IAAA+B,UAAA,oCAAA/I,EAAAwI,SAAA,KAAAnB,GAAA,SAAA8B,EAAA3D,GAAA,IAAAD,EAAA,CAAA6D,OAAA5D,EAAA,SAAAA,IAAAD,EAAA8D,SAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,WAAA9D,EAAA,GAAAD,EAAAgE,SAAA/D,EAAA,SAAAgE,WAAAC,KAAAlE,GAAA,SAAAmE,EAAAlE,GAAA,IAAAD,EAAAC,EAAAmE,YAAA,GAAApE,EAAAjC,KAAA,gBAAAiC,EAAAyB,IAAAxB,EAAAmE,WAAApE,EAAA,SAAAsB,EAAArB,GAAA,KAAAgE,WAAA,EAAAJ,OAAA,SAAA5D,EAAAsC,QAAAqB,EAAA,WAAAS,OAAA,YAAAhC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAvF,EAAAuF,EAAAS,GAAA,GAAAhG,EAAA,OAAAA,EAAAiH,KAAA1B,GAAA,sBAAAA,EAAA0D,KAAA,OAAA1D,EAAA,IAAAsE,MAAAtE,EAAAtE,QAAA,KAAAiC,GAAA,EAAAzD,EAAA,SAAAwJ,IAAA,OAAA/F,EAAAqC,EAAAtE,QAAA,GAAA0E,EAAAsB,KAAA1B,EAAArC,GAAA,OAAA+F,EAAAnD,MAAAP,EAAArC,GAAA+F,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAnD,MAAAN,EAAAyD,EAAAX,MAAA,EAAAW,GAAA,OAAAxJ,EAAAwJ,KAAAxJ,GAAA,UAAAsJ,iBAAAxD,EAAA,2BAAA+B,EAAA5B,UAAA6B,EAAArE,EAAAE,EAAA,eAAA0C,MAAAyB,EAAAf,cAAA,IAAAtD,EAAAqE,EAAA,eAAAzB,MAAAwB,EAAAd,cAAA,IAAAc,EAAAwC,YAAAxD,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAAwE,oBAAA,SAAAvE,GAAA,IAAAD,EAAA,mBAAAC,KAAAwE,YAAA,QAAAzE,QAAA+B,GAAA,uBAAA/B,EAAAuE,aAAAvE,EAAA0E,QAAA1E,EAAA2E,KAAA,SAAA1E,GAAA,OAAAC,OAAA0E,eAAA1E,OAAA0E,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAxD,GAAAoC,GAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAG,EAAAtC,WAAAY,EAAA0B,EAAAtC,UAAAQ,GAAA,0BAAAX,EAAAyC,gBAAAzC,EAAA+E,MAAA,SAAA9E,EAAAxF,EAAA2F,EAAAzC,EAAAzD,QAAA,IAAAA,MAAAS,SAAA,IAAA8F,EAAA,IAAAgC,EAAAtB,EAAAlB,EAAAxF,EAAA2F,EAAAzC,GAAAzD,GAAA,OAAA8F,EAAAwE,oBAAA/J,GAAAgG,IAAAiD,OAAAd,MAAA,SAAA3C,GAAA,OAAAA,EAAA8C,KAAA9C,EAAAM,MAAAE,EAAAiD,WAAApB,EAAAzE,GAAAkD,EAAAlD,EAAAgD,EAAA,aAAAE,EAAAlD,EAAA4C,GAAA,0BAAAM,EAAAlD,EAAA,qDAAAmC,EAAA1D,KAAA,SAAA2D,GAAA,IAAAD,EAAAE,OAAAD,GAAAxF,EAAA,WAAA2F,KAAAJ,EAAAvF,EAAAyJ,KAAA9D,GAAA,OAAA3F,EAAAuK,UAAA,SAAAtB,IAAA,KAAAjJ,EAAAiB,QAAA,KAAAuE,EAAAxF,EAAAwK,MAAA,GAAAhF,KAAAD,EAAA,OAAA0D,EAAAnD,MAAAN,EAAAyD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1D,EAAAqC,SAAAf,EAAAnB,UAAA,CAAAsE,YAAAnD,EAAA+C,MAAA,SAAArE,GAAA,QAAAkF,KAAA,OAAAxB,KAAA,OAAAP,KAAA,KAAAC,MAAAnD,EAAA,KAAA8C,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAvB,IAAAxB,EAAA,KAAAgE,WAAA1B,QAAA4B,IAAAnE,EAAA,QAAAvF,KAAA,WAAAA,EAAA0K,OAAA,IAAA/E,EAAAsB,KAAA,KAAAjH,KAAA6J,OAAA7J,EAAA2K,MAAA,WAAA3K,GAAAwF,IAAA3B,KAAA,gBAAAyE,MAAA,MAAA9C,EAAA,KAAAgE,WAAA,GAAAG,WAAA,aAAAnE,EAAAlC,KAAA,MAAAkC,EAAAwB,IAAA,YAAA4D,MAAAhC,kBAAA,SAAArD,GAAA,QAAA+C,KAAA,MAAA/C,EAAA,IAAAvF,EAAA,cAAA6K,EAAAlF,EAAAzC,GAAA,OAAA8C,EAAA1C,KAAA,QAAA0C,EAAAgB,IAAAzB,EAAAvF,EAAAiJ,KAAAtD,EAAAzC,IAAAlD,EAAAuI,OAAA,OAAAvI,EAAAgH,IAAAxB,KAAAtC,EAAA,QAAAA,EAAA,KAAAsG,WAAAvI,OAAA,EAAAiC,GAAA,IAAAA,EAAA,KAAAzD,EAAA,KAAA+J,WAAAtG,GAAA8C,EAAAvG,EAAAkK,WAAA,YAAAlK,EAAA2J,OAAA,OAAAyB,EAAA,UAAApL,EAAA2J,QAAA,KAAAqB,KAAA,KAAAvE,EAAAP,EAAAsB,KAAAxH,EAAA,YAAA2G,EAAAT,EAAAsB,KAAAxH,EAAA,iBAAAyG,GAAAE,EAAA,SAAAqE,KAAAhL,EAAA4J,SAAA,OAAAwB,EAAApL,EAAA4J,UAAA,WAAAoB,KAAAhL,EAAA6J,WAAA,OAAAuB,EAAApL,EAAA6J,iBAAA,GAAApD,GAAA,QAAAuE,KAAAhL,EAAA4J,SAAA,OAAAwB,EAAApL,EAAA4J,UAAA,YAAAjD,EAAA,UAAAiC,MAAA,kDAAAoC,KAAAhL,EAAA6J,WAAA,OAAAuB,EAAApL,EAAA6J,gBAAAT,OAAA,SAAArD,EAAAD,GAAA,QAAAvF,EAAA,KAAAwJ,WAAAvI,OAAA,EAAAjB,GAAA,IAAAA,EAAA,KAAAkD,EAAA,KAAAsG,WAAAxJ,GAAA,GAAAkD,EAAAkG,QAAA,KAAAqB,MAAA9E,EAAAsB,KAAA/D,EAAA,oBAAAuH,KAAAvH,EAAAoG,WAAA,KAAA7J,EAAAyD,EAAA,OAAAzD,IAAA,UAAA+F,GAAA,aAAAA,IAAA/F,EAAA2J,QAAA7D,MAAA9F,EAAA6J,aAAA7J,EAAA,UAAAuG,EAAAvG,IAAAkK,WAAA,UAAA3D,EAAA1C,KAAAkC,EAAAQ,EAAAgB,IAAAzB,EAAA9F,GAAA,KAAA8I,OAAA,YAAAU,KAAAxJ,EAAA6J,WAAAjC,GAAA,KAAAyD,SAAA9E,IAAA8E,SAAA,SAAAtF,EAAAD,GAAA,aAAAC,EAAAlC,KAAA,MAAAkC,EAAAwB,IAAA,gBAAAxB,EAAAlC,MAAA,aAAAkC,EAAAlC,KAAA,KAAA2F,KAAAzD,EAAAwB,IAAA,WAAAxB,EAAAlC,MAAA,KAAAsH,KAAA,KAAA5D,IAAAxB,EAAAwB,IAAA,KAAAuB,OAAA,cAAAU,KAAA,kBAAAzD,EAAAlC,MAAAiC,IAAA,KAAA0D,KAAA1D,GAAA8B,GAAA0D,OAAA,SAAAvF,GAAA,QAAAD,EAAA,KAAAiE,WAAAvI,OAAA,EAAAsE,GAAA,IAAAA,EAAA,KAAAvF,EAAA,KAAAwJ,WAAAjE,GAAA,GAAAvF,EAAAsJ,aAAA9D,EAAA,YAAAsF,SAAA9K,EAAA2J,WAAA3J,EAAAuJ,UAAAG,EAAA1J,GAAAqH,IAAA2D,MAAA,SAAAxF,GAAA,QAAAD,EAAA,KAAAiE,WAAAvI,OAAA,EAAAsE,GAAA,IAAAA,EAAA,KAAAvF,EAAA,KAAAwJ,WAAAjE,GAAA,GAAAvF,EAAAoJ,SAAA5D,EAAA,KAAAG,EAAA3F,EAAA2J,WAAA,aAAAhE,EAAArC,KAAA,KAAAJ,EAAAyC,EAAAqB,IAAA0C,EAAA1J,GAAA,OAAAkD,GAAA,UAAAmF,MAAA,0BAAA4C,cAAA,SAAA1F,EAAAvF,EAAA2F,GAAA,YAAA6C,SAAA,CAAAvC,SAAA2B,EAAArC,GAAAyD,WAAAhJ,EAAAkJ,QAAAvD,GAAA,cAAA4C,SAAA,KAAAvB,IAAAxB,GAAA6B,IAAA9B,ECuCeuY,OAlCf,SAA0BhS,GAAsE,IAAnEiS,EAAkBjS,EAAlBiS,mBAAoBC,EAAkBlS,EAAlBkS,mBAAoBzK,EAAazH,EAAbyH,cAAeD,EAAOxH,EAAPwH,QAClFtD,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCgI,EAAQ9H,EAAA,GAAE+N,EAAW/N,EAAA,GAa5B,OAXAU,qBAAU,YDJG,SAAA1C,EAAA0F,GAAA,OAAA9H,OAAAqC,YAAA7I,KAAA4E,MAAG,SAAAkE,EAAOmF,EAAeD,GAAO,IAAAoF,EAAAwF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjZ,KAAAoB,MAAA,SAAA+H,GAAA,cAAAA,EAAAhE,KAAAgE,EAAAxF,MAAA,OAEA,GADzCyP,EAAmB8F,GACvB5b,QAAQC,IAAI,kBAAmB0Q,IAC3B9U,IAAUC,aAAY,CAAA+P,EAAAxF,KAAA,SAClBiV,EAAMtf,OAAOC,QAAQ,YAAY4f,OAAOP,IACxCC,EAAWvf,OAAOC,QAAQ,YAAYL,YACtC4f,EAAKxf,OAAOC,QAAQ,MAC1B,IACQwf,EAAiBK,KAAKC,KAC1BT,EAAIU,QAAQ,WACZ,gBAAgB,GAAD3f,OACZsU,EAAa,iBAElB3Q,QAAQC,IAAI,kBAAmBwb,GACzBC,EAAY/b,KAAKC,MAAM4b,EAAGS,aAAaR,GAAiB,QAC9D3F,EAAgB3E,wBAAA,GAAO2E,GAAqB4F,GAC5C,MAAOvP,GACPnM,QAAQkc,KAAK,wBAEfX,EAASpe,KAAK,cAAe2Y,EAAkBnF,EAAeD,GAAQ7E,EAAAxF,KAAA,qBAC5DxK,IAAUgG,aAAa,CAADgK,EAAAxF,KAAA,gBAAAwF,EAAAxF,KAAA,GACR0K,EAAgBL,EAASC,GAAe,KAAD,IAAzD+K,EAAS7P,EAAA/F,MAEbgQ,EAAmB4F,EAEnB1b,QAAQkc,KAAK,oEACdrQ,EAAAxF,KAAA,iBAGDrG,QAAQkc,KAAK,wBAAuB,eAAArQ,EAAA5F,OAAA,SAE/B6P,GAAgB,yBAAAjK,EAAA5K,UAAAuK,QACxBa,MAAA,KAAAC,YC3BG6P,CAAUxL,EAAeD,GAASnL,MAAK,SAACuQ,GACtC,IAAMsG,ECND,SAACtG,GACV,IAAMV,EAAW,CAACD,GAKlB,OAJKtZ,IAAU6F,WACb0T,EAASvO,KAAKgR,IAAU,EAAM/B,GAAmB+B,IAAU,EAAO/B,IAEpEV,EAASvO,KAAKwO,EAAc,MACrBD,EDAiBd,CAAGwB,GACvBuF,EAAYe,MAEXhU,OAAM,SAAA+D,GAAK,OAAInM,QAAQmM,MAAMA,QAE/B,IAEH/M,UAAQoZ,QAAQ,sBAAwBL,KAEhB,IAApB/C,EAAS/W,OAET4P,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,gBAAe,iBAKhCF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACmO,aAAU,CACTC,SAAU,CACRlH,SAAUA,EACVmH,eAAgB,SAAC9c,GAAI,OAAK0b,EAAmB1b,IAC7C8M,UAAW,SAAC9M,GAAI,OAAK2b,EAAmB3b,S,uBEhCpDiD,GAAA,kBAAAC,GAAA,IAAAC,EAAAD,EAAA,GAAAvF,EAAAyF,OAAAC,UAAAC,EAAA3F,EAAA4F,eAAA1C,EAAAuC,OAAAI,gBAAA,SAAAL,EAAAD,EAAAvF,GAAAwF,EAAAD,GAAAvF,EAAA8F,OAAArG,EAAA,mBAAAsG,cAAA,GAAAC,EAAAvG,EAAAwG,UAAA,aAAAC,EAAAzG,EAAA0G,eAAA,kBAAAC,EAAA3G,EAAA4G,aAAA,yBAAAC,EAAAd,EAAAD,EAAAvF,GAAA,OAAAyF,OAAAI,eAAAL,EAAAD,EAAA,CAAAO,MAAA9F,EAAAuG,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAD,GAAA,IAAAe,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAD,EAAAvF,GAAA,OAAAwF,EAAAD,GAAAvF,GAAA,SAAA0G,EAAAlB,EAAAD,EAAAvF,EAAA2F,GAAA,IAAAlG,EAAA8F,KAAAG,qBAAAiB,EAAApB,EAAAoB,EAAAX,EAAAP,OAAAmB,OAAAnH,EAAAiG,WAAAQ,EAAA,IAAAW,EAAAlB,GAAA,WAAAzC,EAAA8C,EAAA,WAAAF,MAAAgB,EAAAtB,EAAAxF,EAAAkG,KAAAF,EAAA,SAAAe,EAAAvB,EAAAD,EAAAvF,GAAA,WAAAsD,KAAA,SAAA0D,IAAAxB,EAAAyB,KAAA1B,EAAAvF,IAAA,MAAAwF,GAAA,OAAAlC,KAAA,QAAA0D,IAAAxB,IAAAD,EAAAmB,OAAA,IAAAQ,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAhC,OAAAiC,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA3H,GAAA2F,EAAAsB,KAAAU,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAvE,EAAAmE,EAAA7B,UAAAiB,EAAAjB,UAAAD,OAAAmB,OAAAY,GAAA,SAAAK,EAAArC,GAAA,0BAAAsC,SAAA,SAAAvC,GAAAe,EAAAd,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,SAAA,SAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAjI,EAAAkD,EAAAzD,EAAAuG,GAAA,IAAAE,EAAAa,EAAAvB,EAAAxF,GAAAwF,EAAAtC,GAAA,aAAAgD,EAAA5C,KAAA,KAAA8C,EAAAF,EAAAc,IAAAE,EAAAd,EAAAN,MAAA,OAAAoB,GAAA,iBAAAA,GAAAvB,EAAAsB,KAAAC,EAAA,WAAA3B,EAAApF,QAAA+G,EAAAgB,SAAAC,MAAA,SAAA3C,GAAAyC,EAAA,OAAAzC,EAAA/F,EAAAuG,MAAA,SAAAR,GAAAyC,EAAA,QAAAzC,EAAA/F,EAAAuG,MAAAT,EAAApF,QAAA+G,GAAAiB,MAAA,SAAA3C,GAAAY,EAAAN,MAAAN,EAAA/F,EAAA2G,MAAA,SAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAA/F,EAAAuG,QAAAE,EAAAc,KAAA,IAAAhH,EAAAkD,EAAA,gBAAA4C,MAAA,SAAAN,EAAAG,GAAA,SAAAyC,IAAA,WAAA7C,GAAA,SAAAA,EAAAvF,GAAAiI,EAAAzC,EAAAG,EAAAJ,EAAAvF,MAAA,OAAAA,MAAAmI,KAAAC,YAAA,SAAAtB,EAAAvB,EAAAvF,EAAA2F,GAAA,IAAAzC,EAAAgE,EAAA,gBAAAzH,EAAAuG,GAAA,GAAA9C,IAAAiE,EAAA,UAAAkB,MAAA,mCAAAnF,IAAAkE,EAAA,cAAA3H,EAAA,MAAAuG,EAAA,OAAAF,MAAAN,EAAA8C,MAAA,OAAA3C,EAAA4C,OAAA9I,EAAAkG,EAAAqB,IAAAhB,IAAA,KAAAE,EAAAP,EAAA6C,SAAA,GAAAtC,EAAA,KAAAE,EAAAqC,EAAAvC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA4C,OAAA5C,EAAA+C,KAAA/C,EAAAgD,MAAAhD,EAAAqB,SAAA,aAAArB,EAAA4C,OAAA,IAAArF,IAAAgE,EAAA,MAAAhE,EAAAkE,EAAAzB,EAAAqB,IAAArB,EAAAiD,kBAAAjD,EAAAqB,SAAA,WAAArB,EAAA4C,QAAA5C,EAAAkD,OAAA,SAAAlD,EAAAqB,KAAA9D,EAAAiE,EAAA,IAAAK,EAAAT,EAAAxB,EAAAvF,EAAA2F,GAAA,cAAA6B,EAAAlE,KAAA,IAAAJ,EAAAyC,EAAA2C,KAAAlB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAAvB,MAAA0B,EAAAR,IAAAsB,KAAA3C,EAAA2C,MAAA,UAAAd,EAAAlE,OAAAJ,EAAAkE,EAAAzB,EAAA4C,OAAA,QAAA5C,EAAAqB,IAAAQ,EAAAR,OAAA,SAAAyB,EAAAlD,EAAAvF,GAAA,IAAA2F,EAAA3F,EAAAuI,OAAArF,EAAAqC,EAAAU,SAAAN,GAAA,GAAAzC,IAAAsC,EAAA,OAAAxF,EAAAwI,SAAA,eAAA7C,GAAAJ,EAAAU,SAAA6C,SAAA9I,EAAAuI,OAAA,SAAAvI,EAAAgH,IAAAxB,EAAAiD,EAAAlD,EAAAvF,GAAA,UAAAA,EAAAuI,SAAA,WAAA5C,IAAA3F,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAA,IAAA+B,UAAA,oCAAApD,EAAA,aAAA0B,EAAA,IAAA5H,EAAAsH,EAAA7D,EAAAqC,EAAAU,SAAAjG,EAAAgH,KAAA,aAAAvH,EAAA6D,KAAA,OAAAtD,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAAvH,EAAAuH,IAAAhH,EAAAwI,SAAA,KAAAnB,EAAA,IAAArB,EAAAvG,EAAAuH,IAAA,OAAAhB,IAAAsC,MAAAtI,EAAAuF,EAAAyD,YAAAhD,EAAAF,MAAA9F,EAAAiJ,KAAA1D,EAAA2D,QAAA,WAAAlJ,EAAAuI,SAAAvI,EAAAuI,OAAA,OAAAvI,EAAAgH,IAAAxB,GAAAxF,EAAAwI,SAAA,KAAAnB,GAAArB,GAAAhG,EAAAuI,OAAA,QAAAvI,EAAAgH,IAAA,IAAA+B,UAAA,oCAAA/I,EAAAwI,SAAA,KAAAnB,GAAA,SAAA8B,EAAA3D,GAAA,IAAAD,EAAA,CAAA6D,OAAA5D,EAAA,SAAAA,IAAAD,EAAA8D,SAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,WAAA9D,EAAA,GAAAD,EAAAgE,SAAA/D,EAAA,SAAAgE,WAAAC,KAAAlE,GAAA,SAAAmE,EAAAlE,GAAA,IAAAD,EAAAC,EAAAmE,YAAA,GAAApE,EAAAjC,KAAA,gBAAAiC,EAAAyB,IAAAxB,EAAAmE,WAAApE,EAAA,SAAAsB,EAAArB,GAAA,KAAAgE,WAAA,EAAAJ,OAAA,SAAA5D,EAAAsC,QAAAqB,EAAA,WAAAS,OAAA,YAAAhC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAvF,EAAAuF,EAAAS,GAAA,GAAAhG,EAAA,OAAAA,EAAAiH,KAAA1B,GAAA,sBAAAA,EAAA0D,KAAA,OAAA1D,EAAA,IAAAsE,MAAAtE,EAAAtE,QAAA,KAAAiC,GAAA,EAAAzD,EAAA,SAAAwJ,IAAA,OAAA/F,EAAAqC,EAAAtE,QAAA,GAAA0E,EAAAsB,KAAA1B,EAAArC,GAAA,OAAA+F,EAAAnD,MAAAP,EAAArC,GAAA+F,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAnD,MAAAN,EAAAyD,EAAAX,MAAA,EAAAW,GAAA,OAAAxJ,EAAAwJ,KAAAxJ,GAAA,UAAAsJ,iBAAAxD,EAAA,2BAAA+B,EAAA5B,UAAA6B,EAAArE,EAAAE,EAAA,eAAA0C,MAAAyB,EAAAf,cAAA,IAAAtD,EAAAqE,EAAA,eAAAzB,MAAAwB,EAAAd,cAAA,IAAAc,EAAAwC,YAAAxD,EAAAiB,EAAAnB,EAAA,qBAAAb,EAAAwE,oBAAA,SAAAvE,GAAA,IAAAD,EAAA,mBAAAC,KAAAwE,YAAA,QAAAzE,QAAA+B,GAAA,uBAAA/B,EAAAuE,aAAAvE,EAAA0E,QAAA1E,EAAA2E,KAAA,SAAA1E,GAAA,OAAAC,OAAA0E,eAAA1E,OAAA0E,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAAD,OAAAmB,OAAAxD,GAAAoC,GAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAG,EAAAtC,WAAAY,EAAA0B,EAAAtC,UAAAQ,GAAA,0BAAAX,EAAAyC,gBAAAzC,EAAA+E,MAAA,SAAA9E,EAAAxF,EAAA2F,EAAAzC,EAAAzD,QAAA,IAAAA,MAAAS,SAAA,IAAA8F,EAAA,IAAAgC,EAAAtB,EAAAlB,EAAAxF,EAAA2F,EAAAzC,GAAAzD,GAAA,OAAA8F,EAAAwE,oBAAA/J,GAAAgG,IAAAiD,OAAAd,MAAA,SAAA3C,GAAA,OAAAA,EAAA8C,KAAA9C,EAAAM,MAAAE,EAAAiD,WAAApB,EAAAzE,GAAAkD,EAAAlD,EAAAgD,EAAA,aAAAE,EAAAlD,EAAA4C,GAAA,0BAAAM,EAAAlD,EAAA,qDAAAmC,EAAA1D,KAAA,SAAA2D,GAAA,IAAAD,EAAAE,OAAAD,GAAAxF,EAAA,WAAA2F,KAAAJ,EAAAvF,EAAAyJ,KAAA9D,GAAA,OAAA3F,EAAAuK,UAAA,SAAAtB,IAAA,KAAAjJ,EAAAiB,QAAA,KAAAuE,EAAAxF,EAAAwK,MAAA,GAAAhF,KAAAD,EAAA,OAAA0D,EAAAnD,MAAAN,EAAAyD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1D,EAAAqC,SAAAf,EAAAnB,UAAA,CAAAsE,YAAAnD,EAAA+C,MAAA,SAAArE,GAAA,QAAAkF,KAAA,OAAAxB,KAAA,OAAAP,KAAA,KAAAC,MAAAnD,EAAA,KAAA8C,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAvB,IAAAxB,EAAA,KAAAgE,WAAA1B,QAAA4B,IAAAnE,EAAA,QAAAvF,KAAA,WAAAA,EAAA0K,OAAA,IAAA/E,EAAAsB,KAAA,KAAAjH,KAAA6J,OAAA7J,EAAA2K,MAAA,WAAA3K,GAAAwF,IAAA3B,KAAA,gBAAAyE,MAAA,MAAA9C,EAAA,KAAAgE,WAAA,GAAAG,WAAA,aAAAnE,EAAAlC,KAAA,MAAAkC,EAAAwB,IAAA,YAAA4D,MAAAhC,kBAAA,SAAArD,GAAA,QAAA+C,KAAA,MAAA/C,EAAA,IAAAvF,EAAA,cAAA6K,EAAAlF,EAAAzC,GAAA,OAAA8C,EAAA1C,KAAA,QAAA0C,EAAAgB,IAAAzB,EAAAvF,EAAAiJ,KAAAtD,EAAAzC,IAAAlD,EAAAuI,OAAA,OAAAvI,EAAAgH,IAAAxB,KAAAtC,EAAA,QAAAA,EAAA,KAAAsG,WAAAvI,OAAA,EAAAiC,GAAA,IAAAA,EAAA,KAAAzD,EAAA,KAAA+J,WAAAtG,GAAA8C,EAAAvG,EAAAkK,WAAA,YAAAlK,EAAA2J,OAAA,OAAAyB,EAAA,UAAApL,EAAA2J,QAAA,KAAAqB,KAAA,KAAAvE,EAAAP,EAAAsB,KAAAxH,EAAA,YAAA2G,EAAAT,EAAAsB,KAAAxH,EAAA,iBAAAyG,GAAAE,EAAA,SAAAqE,KAAAhL,EAAA4J,SAAA,OAAAwB,EAAApL,EAAA4J,UAAA,WAAAoB,KAAAhL,EAAA6J,WAAA,OAAAuB,EAAApL,EAAA6J,iBAAA,GAAApD,GAAA,QAAAuE,KAAAhL,EAAA4J,SAAA,OAAAwB,EAAApL,EAAA4J,UAAA,YAAAjD,EAAA,UAAAiC,MAAA,kDAAAoC,KAAAhL,EAAA6J,WAAA,OAAAuB,EAAApL,EAAA6J,gBAAAT,OAAA,SAAArD,EAAAD,GAAA,QAAAvF,EAAA,KAAAwJ,WAAAvI,OAAA,EAAAjB,GAAA,IAAAA,EAAA,KAAAkD,EAAA,KAAAsG,WAAAxJ,GAAA,GAAAkD,EAAAkG,QAAA,KAAAqB,MAAA9E,EAAAsB,KAAA/D,EAAA,oBAAAuH,KAAAvH,EAAAoG,WAAA,KAAA7J,EAAAyD,EAAA,OAAAzD,IAAA,UAAA+F,GAAA,aAAAA,IAAA/F,EAAA2J,QAAA7D,MAAA9F,EAAA6J,aAAA7J,EAAA,UAAAuG,EAAAvG,IAAAkK,WAAA,UAAA3D,EAAA1C,KAAAkC,EAAAQ,EAAAgB,IAAAzB,EAAA9F,GAAA,KAAA8I,OAAA,YAAAU,KAAAxJ,EAAA6J,WAAAjC,GAAA,KAAAyD,SAAA9E,IAAA8E,SAAA,SAAAtF,EAAAD,GAAA,aAAAC,EAAAlC,KAAA,MAAAkC,EAAAwB,IAAA,gBAAAxB,EAAAlC,MAAA,aAAAkC,EAAAlC,KAAA,KAAA2F,KAAAzD,EAAAwB,IAAA,WAAAxB,EAAAlC,MAAA,KAAAsH,KAAA,KAAA5D,IAAAxB,EAAAwB,IAAA,KAAAuB,OAAA,cAAAU,KAAA,kBAAAzD,EAAAlC,MAAAiC,IAAA,KAAA0D,KAAA1D,GAAA8B,GAAA0D,OAAA,SAAAvF,GAAA,QAAAD,EAAA,KAAAiE,WAAAvI,OAAA,EAAAsE,GAAA,IAAAA,EAAA,KAAAvF,EAAA,KAAAwJ,WAAAjE,GAAA,GAAAvF,EAAAsJ,aAAA9D,EAAA,YAAAsF,SAAA9K,EAAA2J,WAAA3J,EAAAuJ,UAAAG,EAAA1J,GAAAqH,IAAA2D,MAAA,SAAAxF,GAAA,QAAAD,EAAA,KAAAiE,WAAAvI,OAAA,EAAAsE,GAAA,IAAAA,EAAA,KAAAvF,EAAA,KAAAwJ,WAAAjE,GAAA,GAAAvF,EAAAoJ,SAAA5D,EAAA,KAAAG,EAAA3F,EAAA2J,WAAA,aAAAhE,EAAArC,KAAA,KAAAJ,EAAAyC,EAAAqB,IAAA0C,EAAA1J,GAAA,OAAAkD,GAAA,UAAAmF,MAAA,0BAAA4C,cAAA,SAAA1F,EAAAvF,EAAA2F,GAAA,YAAA6C,SAAA,CAAAvC,SAAA2B,EAAArC,GAAAyD,WAAAhJ,EAAAkJ,QAAAvD,GAAA,cAAA4C,SAAA,KAAAvB,IAAAxB,GAAA6B,IAAA9B,EAiMe6Z,OAtLf,WAAgB,IAADtT,EAEPuT,GAAY,IAAIrS,MAAOsS,cAE7BtP,EAA6BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAArCoB,EAAQlB,EAAA,GAAEqP,EAAQrP,EAAA,GACzBG,EAAmCJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAA3C7R,EAAW8R,EAAA,GAAEkP,EAAWlP,EAAA,GAC/BG,EAA8BR,oBAAS,GAAMS,EAAAP,YAAAM,EAAA,GAAtCgP,EAAO/O,EAAA,GAAEgP,EAAUhP,EAAA,GAC1BiP,EAAgD1P,mBAAS,IAAG2P,EAAAzP,YAAAwP,EAAA,GAArD9P,EAAgB+P,EAAA,GAAEC,EAAmBD,EAAA,GAC5CE,EAAoC7P,mBAAS,IAAG8P,EAAA5P,YAAA2P,EAAA,GAAzChQ,EAAUiQ,EAAA,GAAEC,EAAaD,EAAA,GAChCE,EAA0ChQ,mBAAS,IAAGiQ,EAAA/P,YAAA8P,EAAA,GAA/C1M,EAAa2M,EAAA,GAAEC,EAAgBD,EAAA,GACtCE,EAA8BnQ,mBAAS,IAAGoQ,EAAAlQ,YAAAiQ,EAAA,GAAnC9M,EAAO+M,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,EAAmCtQ,mBAAS,WAAUuQ,EAAArQ,YAAAoQ,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAASF,EAAA,GAC/BG,EAA4B1Q,oBAAS,GAAM2Q,EAAAzQ,YAAAwQ,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAQ,IAAIC,gBAAgBpiB,OAAOiC,SAASC,QAG5CmgB,EAAiB,kBAAAnV,KAAAqC,YAAA7I,KAAA4E,MAAG,SAAAkE,IAAA,OAAA9I,KAAAoB,MAAA,SAAA+H,GAAA,cAAAA,EAAAhE,KAAAgE,EAAAxF,MAAA,cAAAwF,EAAA5F,OAAA,UACjB,GAAI,wBAAA4F,EAAA5K,UAAAuK,QACZa,MAAA,KAAAC,YAMKgS,EAAkB,aAyBlBC,EAAcC,uBAClB,SAAChQ,EAAUiQ,EAAYC,GACjBlQ,GACFpP,UAAQK,KAAKK,cAAc,CACzBuJ,eAAgBqV,EAChBC,SAAUF,EACVG,WAAYnC,EACZoC,UAAWzU,KAAKC,MAChByU,aAAcC,OAGlBxB,EAAiBmB,GACjBhB,EAAWe,GACX9B,EAASnO,KAEX,CAACiO,IAkEH,OA9DAzO,qBAAU,WAKR,GAHAhO,QAAQC,IAAI,6BAA8BpE,KAGtCA,IAAUC,aAAc,CAC1B,IAAQF,EAAgBI,OAAOC,QAAQ,YAA/BL,YACRghB,EAAYhhB,GACZA,EAAYuB,KAAK,6BAA8BtB,KAE/C,IAAMmjB,EAAcpjB,EAAYqjB,SAAS,mBACrCD,EAAY/R,kBACdgQ,EAAoB+B,EAAY/R,kBAE9B+R,EAAY9R,YACdkQ,EAAc4B,EAAY9R,YAE5B4Q,EAAU,gBAKV,GAAIjiB,IAAU6F,UAAW,CAEvB1F,OAAOkjB,OAAS5c,EAAE6c,aAClB,IAAMC,EAASrgB,cACf+d,EAAW,IAAIuC,QAAQD,EAAQ,cAC/BtB,EAAU,SACVS,GAAY,EAAM,QAASa,QAKxB,GAAIvjB,IAAU+F,aAAc,CAC/B,IAAM0d,EAAM9gB,cACR3C,IAAUgG,cAAgByd,GAC5BxB,EAAU,YACVS,GAAY,EAAM,WAAYe,IAE9BpB,GAAU,QAKT,GAAIriB,IAAUgG,aAAc,CAC/Bic,EAAU,YAEV,IAAM3U,EAAgBgV,EAAM/U,IAAI,iBAC1BuE,EAAUwQ,EAAM/U,IAAI,WACtBD,GACF8T,EAAoB9T,GAElBwE,GACFyP,EAAczP,QAGhBuQ,GAAU,KAIf,IAEGD,EAEAhQ,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,+BAA8B,sDAO/CF,IAAAC,cAAAD,IAAAsR,SAAA,KACG/Q,EACCP,IAAAC,cAACgN,GAAiB,CAChBC,mBACE,CACEqE,QArHgB,SAAC/f,GAC7B7D,EAAYuB,KAAK,OAAQsC,IAqHb2Q,SAzHiB,SAAC3Q,InB8CZ,SAACA,GACrBO,QAAQC,IAAIR,GACZ,IAAM0J,EAAgB1J,EAAK4J,eACrBsE,EAAUlO,EAAKkf,SACflC,EAAYhd,EAAKmf,WAEvBzO,EAAGS,WApFkB,yBAqFlBC,IAAIlD,GACJiD,WAAW,gBACXC,IAAI1H,GACJyH,WAAW,QACXC,IAAI4L,GACJgD,OAAO,UAAWrP,IAASE,UAAUoP,WAAWC,WAAWlgB,ImBzD5DmgB,CAAcngB,IAyHFogB,MApHgB,SAACpgB,GAC7Bod,EAAQiD,gBAAgBrgB,IAoHZmZ,QAAS0F,GACTT,GAEJzC,mBACE,CACEoE,QArHgB,WAC5B5jB,EAAYuB,KAAK,MAAO,SAqHZ0iB,MAnHgB,WAAO,IAADE,GACb,YAAAA,KAAAxU,YAAA7I,KAAA4E,MAAG,SAAA0Y,IAAA,OAAAtd,KAAAoB,MAAA,SAAAmc,GAAA,cAAAA,EAAApY,KAAAoY,EAAA5Z,MAAA,OACH,OAAnBwW,EAAQqD,WAAWD,EAAA5Z,KAAA,EACbhJ,YAAM,KAAM,KAAD,EACjBwf,EAAQsD,cAAc,wBAAAF,EAAAhf,UAAA+e,QACvB3T,MAAA,KAAAC,WACD8T,IA8GYhQ,SAAUkO,EACV1F,QAAS0F,GACTT,GAEJlN,cAAeA,EACfD,QAASA,IAGXzC,IAAAC,cAACnB,EAAK,CACJI,mBACE,CACEqS,QAASnB,EACTzF,QAASyF,EACTjO,SArJa,SAACjH,EAAewE,GACzC,OnBHoB,SAACxE,EAAewE,EAAS8O,GAE7C,OAAOtM,EAAGS,WA1BS,yBA2BlBC,IAAIlD,GACJiD,WAAW,gBACXC,IAAI1H,GACJyH,WAAW,QACXC,IAAI4L,GACJvH,IAAI,CAAEmL,WAAY5D,EAAW6D,YAAatkB,OAAO+O,UAAUwV,WAAYC,aAAcxkB,OAAO+O,UAAU0V,SAAUC,QAAS,KACzHnb,MAAK,WACJ,OAAO,KAER6C,OAAM,SAAC+D,GACN,OAAO,KmBVFwU,CAAgBxX,EAAewE,EAAS8O,KAqJnCoB,GAEJ5Q,iBAAkBA,EAClBC,WAAYA,EACZF,QAASuR,MCrLrBqC,IAASC,OACP5S,IAAAC,cAACsO,GAAG,MACJ9e,SAASC,eAAe,U,+BCP1B,sCAAMgL,EAAe,SAACmY,GAA2B,IAAlBjY,EAAMyD,UAAAjO,OAAA,QAAAwa,IAAAvM,UAAA,IAAAA,UAAA,GAC7BnQ,EAAU0M,EAAU,cAAe,OACzC,MAAM,cAANxM,OAAqBF,EAAM,KAAAE,OAAIykB,EAAO,a","file":"static/js/main.0f63a3d4.chunk.js","sourcesContent":["import { envConfig } from \"../../config/main\"\nimport { eventCodes } from \"../../config/trigger\"\nimport $ from \"jquery\"\n\n// conditionally load electron and psiturk based on MTURK config variable\nlet ipcRenderer = false;\nif (envConfig.USE_ELECTRON) {\n  const electron = window.require(\"electron\");\n  ipcRenderer = electron.ipcRenderer;\n}\n\n// Relies on styling in App.css, generate PD spot\nconst photodiodeGhostBox = () => {\n  const class_ = envConfig.USE_PHOTODIODE ? \"visible\" : \"invisible\";\n\n  return `<div class=\"photodiode-box ${class_}\" id=\"photodiode-box\">\n\t\t\t\t\t\t\t\t\t<span id=\"photodiode-spot\" class=\"photodiode-spot\"></span>\n  \t\t\t\t\t\t\t\t</div>`;\n};\n\nconst pdSpotEncode = (taskCode) => {\n  function pulse_for(ms, callback) {\n    $(\".photodiode-spot\").css({ \"background-color\": \"white\" });\n    setTimeout(() => {\n      $(\".photodiode-spot\").css({ \"background-color\": \"black\" });\n      callback();\n    }, ms);\n  }\n\n  function repeat_pulse_for(ms, i) {\n    if (i > 0) {\n      pulse_for(ms, () => {\n        setTimeout(() => {\n          repeat_pulse_for(ms, i - 1);\n        }, ms);\n      });\n    }\n  }\n\n  if (envConfig.USE_PHOTODIODE) {\n    const blinkTime = 40;\n    let numBlinks = taskCode;\n    if (taskCode < eventCodes.open_task) numBlinks = 1;\n    repeat_pulse_for(blinkTime, numBlinks);\n    if (ipcRenderer) {\n      ipcRenderer.send(\"trigger\", taskCode);\n      setTimeout(function () {\n        ipcRenderer.send(\"trigger\", 0);\n      }, 5);\n    }\n  }\n};\n\nexport { photodiodeGhostBox, pdSpotEncode };\n","import { jsPsych } from 'jspsych-react'\nimport requireContext from 'require-context.macro'\n\nconst sleep = (ms) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst removeCursor = (elementId) => {\n  let element = document.getElementById(elementId);\n  element.classList.add(\"nocursor\");\n}\n\nconst addCursor = (elementId) => {\n  let element = document.getElementById(elementId);\n  element.classList.remove(\"nocursor\");\n}\n\nconst getQueryVariable = (variable) => {\n  let query = window.location.search.substring(1);\n  let vars = query.split(\"&\");\n  for (let i = 0; i < vars.length; i++) {\n    let pair = vars[i].split(\"=\");\n    if (decodeURIComponent(pair[0]) === variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n};\n\nconst verifyProlific = () => {\n  return getQueryVariable(\"PROLIFIC_ID\") !== undefined;\n};\n\nconst getProlificId = () => {\n  const prolificId = getQueryVariable(\"PROLIFIC_PID\");\n  return prolificId\n};\n\n// add a random number between 0 and offset to the base number\nconst jitter = (base, offset) => (\n  base + Math.floor(Math.random() * Math.floor(offset))\n)\n\n// add a random number between 0 and 50 to the base number\nconst jitter50 = (base) => jitter(base, 50)\n\n// flip a coin\nconst randomTrue = () => Math.random() > 0.5\n\n// deeply copy an object\nconst deepCopy = (obj) => JSON.parse(JSON.stringify(obj))\n\n// format a number as a dollar amount\nconst formatDollars = (amount) => '$' + parseFloat(amount).toFixed(2)\n\n// create a pre-trial wait period\nconst generateWaitSet = (trial, waitTime) => {\n  let waitTrial = Object.assign({}, trial)\n  waitTrial.trial_duration = waitTime\n  waitTrial.response_ends_trial = false\n  waitTrial.prompt = '-'\n\n  return [waitTrial, trial]\n}\n\nconst keypressResponse = (info) => {\n  const data = {\n    key_press: info.key\n  }\n\n  jsPsych.finishTrial(data)\n}\n\nconst startKeypressListener = () => {\n  let keyboardListener = jsPsych.pluginAPI.getKeyboardResponse({\n    callback_function: keypressResponse,\n    valid_responses: jsPsych.ALL_KEYS,\n    persist: false\n  })\n\n  return keyboardListener\n}\n\n// import images\nconst importAll = (r) => {\n  return r.keys().map(r);\n}\n\nconst images = importAll(requireContext('../assets/images', false, /\\.(png|jpe?g|svg)$/));\n\nconst getTurkUniqueId = () => {\n  const turkInfo = jsPsych.turk.turkInfo()\n  const uniqueId = `${turkInfo.workerId}:${turkInfo.assignmentId}`\n  return uniqueId\n}\n\nconst getBlockNumber = (data) => {\n  const blockNumber = JSON.parse(data.responses)['Q0']\n  jsPsych.data.addProperties({num_blocks: blockNumber})\n  console.log(\"NumBlocks\", blockNumber)\n}\n\nconst beep = (audioCodes) => {\n  const context = new AudioContext()\n  const o = context.createOscillator()\n  const g = context.createGain()\n  o.type = audioCodes.type\n  o.connect(g)\n  o.frequency.setValueAtTime(audioCodes.frequency, 0)\n  console.log(context.currentTime)\n  g.connect(context.destination)\n  o.start()\n  o.stop(context.currentTime + 0.4)\n}\n\n\nexport {\n  jitter,\n  jitter50,\n  randomTrue,\n  deepCopy,\n  formatDollars,\n  generateWaitSet,\n  images,\n  verifyProlific,\n  getProlificId,\n  startKeypressListener,\n  getTurkUniqueId,\n  sleep,\n  removeCursor,\n  addCursor,\n  beep,\n  getBlockNumber\n}\n","// Event trigger settings - used in both the react app (renderer) and the electron app (main)\nconst eventCodes = {\n\tleft: 1,\n\tmiddle: 2,\n\tright: 3,\n\tfixation: 5,\n\tnon_fixation: 6,\n\topen_task: 11\n}\n\n// this is module.exports isntead of just exports as it is also imported into the electron app\nmodule.exports = {\n\teventCodes\n}\n","// config/main.js\n// This is the main configuration file where universal and default settings should be placed.\n// These settins can then be imported anywhere in the app as they are exported at the botom of the file.\n\nimport { jsPsych } from \"jspsych-react\";\nimport _ from \"lodash\";\nimport { eventCodes } from \"./trigger\";\nimport { getProlificId } from \"../lib/utils\";\n\nrequire(\"dotenv\").config();\n\n// mapping of letters to key codes\nconst keys = {\n  A: 65,\n  B: 66,\n  C: 67,\n  F: 70,\n  J: 74,\n  space: 32,\n};\n\n// audio codes\nconst audioCodes = {\n  frequency: 100 * (eventCodes.open_task - 9),\n  type: \"sine\",\n};\n\n// is this mechanical turk?\nlet USE_MTURK = !jsPsych.turk.turkInfo().outsideTurk;\nlet USE_PROLIFIC = getProlificId() && !USE_MTURK;\nlet USE_ELECTRON = true;\nlet USE_FIREBASE = process.env.REACT_APP_FIREBASE === \"true\";\n\ntry {\n  window.require(\"electron\");\n} catch {\n  USE_ELECTRON = false;\n}\n// whether or not to ask the participant to adjust the volume\nconst USE_VOLUME = process.env.REACT_APP_VOLUME === \"true\";\n// these variables depend on USE_ELECTRON\n// whether or not to enable video\nconst USE_CAMERA = process.env.REACT_APP_VIDEO === \"true\" && USE_ELECTRON;\n// whether or not the EEG/event marker is available\nconst USE_EEG =\n  process.env.REACT_APP_USE_EEG === \"true\" && USE_ELECTRON;\n// whether or not the photodiode is in use\nconst USE_PHOTODIODE =\n  process.env.REACT_APP_USE_PHOTODIODE === \"true\" && USE_ELECTRON;\n\n// get language file\nconst lang = require(\"../language/en_us.json\");\n// TODO: what should this depend on?\nif (!USE_ELECTRON) {\n  // if this is mturk, merge in the mturk specific language\n  const mlang = require(\"../language/en_us.mturk.json\");\n  _.merge(lang, mlang);\n}\n\nconst taskName = \"MSIT\";\n\n// setting config for trials\nconst envConfig = {\n  USE_PHOTODIODE,\n  USE_EEG,\n  USE_ELECTRON,\n  USE_MTURK,\n  USE_VOLUME,\n  USE_CAMERA,\n  USE_PROLIFIC,\n  USE_FIREBASE\n};\n\nexport {\n  keys,\n  lang,\n  eventCodes,\n  envConfig,\n  audioCodes,\n  taskName,\n};\n","import { lang, taskName, envConfig} from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\nimport { jsPsych } from 'jspsych-react'\n\n\nlet ipcRenderer = false;\nif (envConfig.USE_ELECTRON) {\n  const electron = window.require('electron');\n  ipcRenderer  = electron.ipcRenderer;\n}\n\nfunction saveBlob(blob, media, participantId) {\n  let reader = new FileReader()\n  let fileName =`pid_${participantId}_${media}_${Date.now()}.webm`\n  reader.onload = function() {\n      if (reader.readyState === 2) {\n          var buffer = new Buffer(reader.result)\n          ipcRenderer.send('save_video', fileName, buffer)\n          console.log(`Saving ${JSON.stringify({ fileName, size: blob.size })}`)\n      }\n  }\n  reader.readAsArrayBuffer(blob)\n}\n\nconst camera = () => {\n  document.title = taskName\n  let markup = `\n  <div class=\"d-flex flex-column align-items-center\">\n  <p>${lang.instructions.camera}</p>\n  <video id=\"camera\" width=\"640\" height=\"480\" autoplay></video>\n  </div>\n  `\n  let stimulus = baseStimulus(markup, true) +\n                 photodiodeGhostBox()\n\n  return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    choices: [ lang.prompt.continue.button],\n    response_ends_trial: true,\n    on_load: () => {\n      // Grab elements, create settings, etc.\n      // Elements for taking the snapshot\n      const participantId = jsPsych.data.get().values()[0].participant_id\n\n      let camera = document.getElementById('camera');\n\n\n      const handleEvents = function(stream, recorder) {\n        console.log(stream)\n        if (recorder === \"cameraCapture\") {\n          camera.srcObject = stream;\n        }\n      \n        \n        const options = {mimeType: 'video/webm'};\n        const recordedChunks = [];\n        window[recorder] = new MediaRecorder(stream, options);\n    \n        window[recorder].addEventListener('dataavailable', function(e) {\n          if (e.data.size > 0) {\n            recordedChunks.push(e.data);\n          }\n        });\n    \n        window[recorder].addEventListener('stop', function() {\n          const blob = new Blob(recordedChunks)\n          saveBlob(blob, recorder, participantId)\n        });\n    \n      };\n    \n      navigator.mediaDevices.getUserMedia({ video: true })\n          .then((stream) => handleEvents(stream, 'cameraCapture'));\n\n      const { desktopCapturer } = window.require('electron')\n\n      desktopCapturer.getSources({ types: ['window'] }).then(async sources => {\n        for (const source of sources) {\n          if (source.name === taskName) {\n            navigator.mediaDevices.getUserMedia({\n              video: {\n                mandatory: {\n                  chromeMediaSource: 'desktop',\n                  chromeMediaSourceId: source.id\n                }\n              }\n            }).then(stream => {\n              handleEvents(stream, 'screenCapture')\n            })\n            .catch(error => console.log(error))\n          } \n        }\n      })\n    \n    },\n    on_finish: () => {\n      if (envConfig.USE_CAMERA) {\n        window.cameraCapture.start()\n        window.screenCapture.start()\n      }\n    }\n  }\n}\n\nexport default camera\n","var map = {\n\t\"./blue_payout_correct_10.png\": 60,\n\t\"./blue_payout_correct_100.png\": 61\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 59;","module.exports = __webpack_public_path__ + \"static/media/blue_payout_correct_10.f515a81e.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_payout_correct_100.ae2416c7.png\";","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Login({ onLogin, envParticipantId, envStudyId, validationFunction }) {\n  // State variables for login screen\n  const [participantId, setParticipant] = useState(\"\");\n  const [studyId, setStudy] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    // Update based on environment variables\n    setParticipant(envParticipantId);\n    setStudy(envStudyId);\n  }, [envParticipantId, envStudyId]);\n\n  // Checks if forms are filled in\n  function validateForm() {\n    return participantId.length > 0 && studyId.length > 0;\n  }\n\n  // Function to log in participant\n  function handleSubmit(e) {\n    e.preventDefault();\n    // Validates fields\n    validationFunction(participantId, studyId)\n    // Logs in depending on result from promise\n    .then((loggedIn) => {\n      if (loggedIn) {\n        onLogin(loggedIn, studyId, participantId);\n      } else {\n        setError(true);\n      }\n    });\n  }\n\n  return (\n    <div className=\"centered-h-v\">\n      <div className=\"width-50\">\n        {error ? (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            The participant ID and study ID do not match\n          </div>\n        ) : null}\n        <Form className=\"centered-h-v\" onSubmit={handleSubmit}>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"participantId\">\n            <Form.Label>Participant ID</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"participantId\"\n              value={participantId}\n              onChange={(e) => setParticipant(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"studyId\">\n            <Form.Label>Study ID</Form.Label>\n            <Form.Control\n              type=\"studyId\"\n              value={studyId}\n              onChange={(e) => setStudy(e.target.value)}\n            />\n          </Form.Group>\n          <Button\n            style={{ width: \"100%\" }}\n            block\n            size=\"lg\"\n            type=\"submit\"\n            disabled={!validateForm()}\n          >\n            Log In\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import firebase from \"firebase\";\nimport 'firebase/firestore';\n\nrequire(\"dotenv\").config();\n\n// Set collection name\nconst collectionName = \"participant_responses\";\nconst REGISTERED_COLLECTION_NAME = \"registered_studies\";\n\n// Firebase config\nlet config = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  databaseURL: process.env.REACT_APP_databaseURL,\n  projectId: process.env.REACT_APP_projectId || \"no-firebase\",\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n};\n\n\n// Get a Firestore instance\nvar db = firebase.initializeApp(config).firestore();\n\n// Use emulator if on localhost\nif (window.location.hostname === \"localhost\") {\n  db.useEmulator(\"localhost\", 8080);\n}\n\n// Add participant data and trial data to db\nconst initParticipant = (participantId, studyId, startDate) => {\n  // return promise with value true if participant and study id match, false otherwise\n    return db.collection(collectionName)\n    .doc(studyId)\n    .collection('participants')\n    .doc(participantId)\n    .collection('data')\n    .doc(startDate)\n    .set({ start_time: startDate, app_version: window.navigator.appVersion, app_platform: window.navigator.platform, results: []})\n    .then(()=>{\n      return true\n    })\n    .catch((error) => {\n      return false\n    });\n};\n\n// get config from firebase\nconst getFirestoreConfig = (studyID, participantID) => {\n  return db\n    .collection(REGISTERED_COLLECTION_NAME)\n    .doc(studyID)\n    .collection(\"config\")\n    .doc(participantID)\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        return JSON.parse(doc.data().config);\n      } else {\n        console.log(`Document ${participantID} does not exist`);\n        return false;\n      }\n    })\n    .catch((error) => console.log(\"Error in getting config:\", error));\n};\n\n/**\n * Gets the config object for the logged-in participant, or uses the default for the study. The config object\n * is a string.\n * @param {string} studyID The study ID specified at login.\n * @param {string} participantID The logged in participant ID.\n */\nconst firestoreConfig = async (studyID, participantID) => {\n  const pConfig = await getFirestoreConfig(studyID, participantID);\n  const defaultConfig = await getFirestoreConfig(studyID, \"default\");\n  // Returning false will not interfere with override of the object\n  if (pConfig || defaultConfig) {\n    return {...defaultConfig, ...pConfig};\n  } else {\n    return false;\n  }\n};\n\n// Add inidividual trials to db\nconst addToFirebase = (data) => {\n  console.log(data)\n  const participantId = data.participant_id;\n  const studyId = data.study_id;\n  const startDate = data.start_date\n  \n  db.collection(collectionName)\n    .doc(studyId)\n    .collection('participants')\n    .doc(participantId)\n    .collection('data')\n    .doc(startDate)\n    .update('results', firebase.firestore.FieldValue.arrayUnion(data))\n};\n\n// Export types that exists in Firestore\nexport {\n  db,\n  collectionName,\n  initParticipant,\n  addToFirebase,\n  firestoreConfig\n};\n\nexport default firebase;","import { lang } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst experimentStart = () => {\n  let stimulus = baseStimulus(`<h1>${lang.task.name}</h1>`, true) + photodiodeGhostBox()\n\n  return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    choices: [lang.prompt.continue.button]\n  }\n}\n\nexport default experimentStart\n","import { eventCodes, lang, audioCodes } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\nimport { beep } from '../lib/utils'\n\nconst startCode = () => {\n  let stimulus = baseStimulus(`<h1>${lang.prompt.setting_up}</h1>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: 2000,\n    on_load: () => {\n      pdSpotEncode(eventCodes.open_task)\n      beep(audioCodes)\n    }\n  }\n}\n\nexport default startCode\n","import { lang, envConfig } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst screenOne = baseStimulus(`\n    <div class='instructions'>\n    <h1>${lang.instructions.welcome}</h1>\n    <p>${lang.instructions.p1}</p>\n    <p>${lang.instructions.p2}</p>\n    </div>\n    `, true)\n\nconst screenTwo = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.p3}</p>\n    <p>${lang.instructions.p4}</p>\n    </div>\n    `, true)\n\nconst screenThree = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.p5}</p>\n    <p>${lang.instructions.t100}</p>\n    <p>${lang.instructions.press_one}</p>\n    </div>\n    `, true)\n\nconst screenFour = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.if_see}</p>\n    <p>${lang.instructions.t020}</p>\n    <p>${lang.instructions.press_two}</p>\n    </div>\n    `, true)\n\nconst screenFive = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.if_see}</p>\n    <p>${lang.instructions.t003}</p>\n    <p>${lang.instructions.press_three}</p>\n    </div>\n    `, true)\n\nconst screenSix = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.if_see}</p>\n    <p>${lang.instructions.t212}</p>\n    <p>${lang.instructions.press_one}</p>\n    </div>\n    `, true)\n\nconst screenSeven = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.if_see}</p>\n    <p>${lang.instructions.t112}</p>\n    <p>${lang.instructions.press_two}</p>\n    </div>\n    `, true)\n\nconst screenEight = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.if_see}</p>\n    <p>${lang.instructions.t322}</p>\n    <p>${lang.instructions.press_three}</p>\n    </div>\n    `, true)\n\nconst screenNine =  baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.if_see}</p>\n    <p>${lang.instructions.t221}</p>\n    <p>${lang.instructions.press_one}</p>\n    </div>\n    `, true)\n\nconst screenTen =  baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.if_see}</p>\n    <p>${lang.instructions.t211}</p>\n    <p>${lang.instructions.press_two}</p>\n    </div>\n    `, true)\n\nconst screenEleven = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.if_see}</p>\n    <p>${lang.instructions.t232}</p>\n    <p>${lang.instructions.press_three}</p>\n    </div>\n    `, true)\n\nconst screenTwelve = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.p6}</p>\n    <p>${lang.instructions.p7}</p>\n    <p>${lang.instructions.p8}</p>\n    </div>\n    `, true)\n\nconst screenThirteen = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.p9}</p>\n    <p>${lang.instructions.p10}</p>\n    <p>${lang.instructions.p11}</p>\n    </div>\n    `, true)\n\nconst screenFourteen = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.p12}</p>\n    <p>${lang.instructions.p13}</p>\n    <p>${lang.instructions.p14}</p>\n    <p>${lang.instructions.p15}</p>\n    </div>\n    `, true)\n\nconst screenFifteen = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.practice_trials}</p>\n    </div>\n    `, true)\n\nconst instructions = () => {\n  let tl = [\n    screenOne,\n    screenTwo,\n    screenThree,\n    screenFour,\n    screenFive,\n    screenSix,\n    screenSeven,\n    screenEight,\n    screenNine,\n    screenTen,\n    screenEleven,\n    screenTwelve,\n    screenThirteen,\n    screenFourteen,\n    screenFifteen,\n  ]\n\n  if (envConfig.USE_ELECTRON && !envConfig.USE_EEG) tl.splice(13,1)\n\n  return {\n    type: 'instructions',\n    pages: tl,\n    show_clickable_nav: true\n\n  }\n}\n\nexport default instructions\n","import { lang } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst holdUpMarker = () => {\n  let stimulus = baseStimulus(`<div>\n    <h2 id='usb-alert'></h2>\n    <br><h5>${lang.prompt.focus}</h5>\n  </div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    choices: [lang.prompt.continue.button]\n  }\n}\n\nexport default holdUpMarker\n","import { lang } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst adjustVolume = () => {\n    const stimulus = baseStimulus(`\n    <div class='instructions'>\n    <h1>${lang.instructions.adjust_volume}</h1>\n    </div>\n    `, true)\n    \n    return {\n        type: 'html_keyboard_response',\n        stimulus: stimulus,\n        prompt:  lang.prompt.continue.press,\n        response_ends_trial: true\n    }\n}\n\nexport default adjustVolume","import { lang } from '../config/main'\nimport { getBlockNumber } from '../lib/utils'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst numBlocks = () => {\n    return {\n      type: 'survey_text',\n      questions: [{ prompt: baseStimulus(`<h1>${lang.block_number.set}</h1>`, true), value: 8}],\n      on_finish: (data) => {\n        getBlockNumber(data)\n      }\n    }\n}\n\nexport default numBlocks","import experimentStart from \"../trials/experimentStart\";\nimport startCode from \"../trials/startCode\";\nimport instructions from \"../trials/instructions\";\nimport holdUpMarker from \"../trials/holdUpMarker\";\nimport { envConfig } from \"../config/main\";\nimport adjustVolume from \"../trials/adjustVolume\";\nimport camera from \"../trials/camera\";\nimport numBlocks from '../trials/blockNumber'\n\nlet tl = [experimentStart()];\nif (envConfig.USE_VOLUME) {\n  tl.push(adjustVolume());\n}\nif (envConfig.USE_PHOTODIODE) {\n  tl.push(numBlocks())\n}\nif (envConfig.USE_EEG) {\n  tl.push(holdUpMarker());\n  tl.push(startCode());\n}\ntl.push(instructions());\nif (envConfig.USE_CAMERA) {\n  tl.push(camera());\n}\n\nconst preamble = {\n  type: \"html_keyboard_response\",\n  stimulus: \"\",\n  timeline: tl,\n};\n\nexport default preamble;\n","import { lang, envConfig } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst experimentEnd = (duration) => {\n  let stimulus = baseStimulus(`<h1>${lang.task.end}</h1>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: duration,\n    on_load: () => {\n      if (envConfig.USE_CAMERA) {\n        console.log('finished')\n        window.cameraCapture.stop()\n        window.screenCapture.stop()\n      }\n    }\n  }\n}\n\nexport default experimentEnd\n","import { eventCodes } from '../config/main'\nimport { pdSpotEncode, photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { fixationHTML } from '../lib/markup/fixation'\nimport { jsPsych } from 'jspsych-react'\nimport { jitter, removeCursor } from '../lib/utils'\n\nconst fixation = (trial) => {\n  let stimulus = fixationHTML + photodiodeGhostBox()\n\n  const code = eventCodes.fixation;\nconst duration = jitter(3000,1000);\n// trial.Duration will not be used for our purposes.\n  return {\n    type: 'html_keyboard_response',\n    choices: jsPsych.NO_KEYS,\n    stimulus: stimulus,\n    response_ends_trial: false,\n//    trial_duration: trial.Duration*1000,\n    trial_duration: duration,\n    on_load: () => {\n      removeCursor('experiment')\n      pdSpotEncode(code)\n    },\n    on_finish: (data) => data.code = code\n  }\n}\n\nexport default fixation\n","export const fixationHTML = '<div class=\"beads_container\"><div id=\"fixation-dot\"> </div></div>'\n","const interferenceTrial = (stimulus, too_slow, mag) => {\n  if (too_slow) {\n    return `<div class=\"beads_container\"><h1 class=\"too_slow\">${stimulus}</h1></div>`\n  }\n  else {\n    return `<div class=\"beads_container\"><h1 class=\"interference\" style=\"font-size: ${mag/100*5}rem\">${stimulus}</h1></div>`\n  }\n}\n\nexport default interferenceTrial\n","import interferenceTrial  from '../lib/markup/trial'\nimport { pdSpotEncode, photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { eventCodes, lang } from '../config/main'\n\nconst interference = (trial, experimentConfig) => {\n  const code = eventCodes.non_fixation;\n  var stimulus = interferenceTrial(trial.Stimuli, false, experimentConfig.font_magnification) + photodiodeGhostBox()\n  return {\n    type: 'rt-categorize-html',\n    trial_duration: experimentConfig.response_time_limit,\n    on_load: () => pdSpotEncode(code),\n    key_answer: 48+trial.Correct,\n    show_stim_with_feedback: false,\n    feedback_duration: 2000,\n    timeout_message: interferenceTrial(lang.prompt.too_slow, true, experimentConfig.font_magnification) + photodiodeGhostBox(),\n    stimulus: stimulus,\n    response_ends_trial: true,\n    on_finish: (data) => {\n      if (data.key_press !== null) {\n        data.correct = trial.Correct === data.key_press - 48;\n      }\n      else {\n        data.correct = false;\n      }\n      data.code = data.key_press - 48\n    }\n  }\n}\n\nexport default interference\n","import { lang, envConfig } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\nimport { jsPsych } from 'jspsych-react'\n\nconst accuracy = (training, num_trials, num_complete, experimentConfig) => {\n   return {\n    type: 'html_keyboard_response',\n    stimulus: '',\n    data: {percent_correct: 0},\n    on_finish: () => {\n      if (envConfig.USE_PHOTODIODE){\n        const j_data = jsPsych.data.get().last(1).values()[0]\n        if (!training && num_complete>=j_data.num_blocks*96) {\n          jsPsych.endCurrentTimeline()\n      }\n      }\n    },\n    on_start: (trial) => {\n      const data = jsPsych.data.get().last(num_trials).values()\n      const num_correct = data.reduce((accumulator, item) => {\n        if (typeof item.correct === 'undefined') {\n          return accumulator\n        }\n        else {\n          if (item.correct) {\n            return accumulator + 1\n          }\n          else {\n            return accumulator\n          }\n        }\n      }, 0)\n      trial.data.percent_correct = 100*2*num_correct/data.length;\n      trial.stimulus = baseStimulus(`<h1>${Math.floor(trial.data.percent_correct).toString()+'%'}</h1>`, true) + photodiodeGhostBox();\n      if (training) {\n        if (trial.data.percent_correct < experimentConfig.accuracy_cutoff) {\n          trial.prompt = lang.prompt.continue.training_failed_accuracy + experimentConfig.accuracy_cutoff + lang.prompt.continue.training_failed_continue\n        }\n        else {\n          trial.prompt = lang.prompt.continue.training_success\n        }\n      } else {\n        const j_data = jsPsych.data.get().last(1).values()[0]\n        if (envConfig.USE_PHOTODIODE){\n          trial.prompt = lang.prompt.continue.block + (num_complete/96).toString() + lang.prompt.continue.of + j_data.num_blocks + lang.prompt.continue.next_block\n        }\n        else {\n          trial.prompt = lang.prompt.continue.block + (num_complete/96).toString() + lang.prompt.continue.of + '8' + lang.prompt.continue.next_block\n        }\n      }\n    },\n    prompt: 'temp'\n  }\n}\n\nexport default accuracy\n","import fixation from '../trials/fixation'\nimport interference from '../trials/interference'\nimport accuracy from '../trials/accuracy'\nimport trainingBlock from '../config/pcps_msit_eeg_train_sequence.json'\nimport mainBlock from '../config/pcps_msit_eeg_trial_sequence.json'\n\nconst taskBlock = (training, experimentConfig) => {\n\tconst block = training ? trainingBlock : mainBlock;\n\tconst num_trials = training ? block.length : 96;\n\tlet timeline = block.flatMap( (trial) => {\n\t\tif (trial.Trial % 2 === 1) {\n\t\t\treturn fixation(trial)\n\t\t}\n\t\telse {\n\t\t\tif (trial.Trial % 96 === 0) {\n\t\t\t\treturn [interference(trial, experimentConfig), accuracy(training, num_trials, trial.Trial, experimentConfig)]\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn interference(trial, experimentConfig)\n\t\t\t}\n\t\t}\n\t});\n\treturn {\n\t\ttype: 'html_keyboard_response',\n\t  stimulus: '',\n\t\ttimeline: timeline,\n\t\tloop_function: (data) => {\n\t\t\treturn training && data.values()[data.values().length - 1].percent_correct < experimentConfig.accuracy_cutoff;\n\t\t}\n\t}\n}\n\nexport default taskBlock\n","import { jsPsych } from \"jspsych-react\";\n\nexport function rt_categorize_html() {\n\n  var plugin = {};\n\n  plugin.info = {\n    name: 'categorize-html',\n    description: '',\n    parameters: {\n      stimulus: {\n        type: jsPsych.plugins.parameterType.HTML_STRING,\n        pretty_name: 'Stimulus',\n        default: undefined,\n        description: 'The HTML content to be displayed.'\n      },\n      key_answer: {\n        type: jsPsych.plugins.parameterType.KEYCODE,\n        pretty_name: 'Key answer',\n        default: undefined,\n        description: 'The key to indicate the correct response.'\n      },\n      choices: {\n        type: jsPsych.plugins.parameterType.KEYCODE,\n        pretty_name: 'Choices',\n        default: jsPsych.ALL_KEYS,\n        array: true,\n        description: 'The keys the subject is allowed to press to respond to the stimulus.'\n      },\n      text_answer: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Text answer',\n        default: null,\n        description: 'Label that is associated with the correct answer.'\n      },\n      correct_text: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Correct text',\n        default: \"<p class='feedback'>Correct</p>\",\n        description: 'String to show when correct answer is given.'\n      },\n      incorrect_text: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Incorrect text',\n        default: \"<p class='feedback'>Incorrect</p>\",\n        description: 'String to show when incorrect answer is given.'\n      },\n      prompt: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Prompt',\n        default: null,\n        description: 'Any content here will be displayed below the stimulus.'\n      },\n      force_correct_button_press: {\n        type: jsPsych.plugins.parameterType.BOOL,\n        pretty_name: 'Force correct button press',\n        default: false,\n        description: 'If set to true, then the subject must press the correct response key after feedback in order to advance to next trial.'\n      },\n      show_stim_with_feedback: {\n        type: jsPsych.plugins.parameterType.BOOL,\n        default: true,\n        no_function: false,\n        description: ''\n      },\n      show_feedback_on_timeout: {\n        type: jsPsych.plugins.parameterType.BOOL,\n        pretty_name: 'Show feedback on timeout',\n        default: false,\n        description: 'If true, stimulus will be shown during feedback. If false, only the text feedback will be displayed during feedback.'\n      },\n      timeout_message: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Timeout message',\n        default: \"<p>Please respond faster.</p>\",\n        description: 'The message displayed on a timeout non-response.'\n      },\n      stimulus_duration: {\n        type: jsPsych.plugins.parameterType.INT,\n        pretty_name: 'Stimulus duration',\n        default: null,\n        description: 'How long to hide stimulus.'\n      },\n      trial_duration: {\n        type: jsPsych.plugins.parameterType.INT,\n        pretty_name: 'Trial duration',\n        default: null,\n        description: 'How long to show trial'\n      },\n      feedback_duration: {\n        type: jsPsych.plugins.parameterType.INT,\n        pretty_name: 'Feedback duration',\n        default: 2000,\n        description: 'How long to show feedback.'\n      }\n    }\n  }\n\n  plugin.trial = function(display_element, trial) {\n\n    display_element.innerHTML = '<div id=\"jspsych-categorize-html-stimulus\" class=\"jspsych-categorize-html-stimulus\">'+trial.stimulus+'</div>';\n\n    // hide image after time if the timing parameter is set\n    if (trial.stimulus_duration !== null) {\n      jsPsych.pluginAPI.setTimeout(function() {\n        display_element.querySelector('#jspsych-categorize-html-stimulus').style.visibility = 'hidden';\n      }, trial.stimulus_duration);\n    }\n\n    // if prompt is set, show prompt\n    if (trial.prompt !== null) {\n      display_element.innerHTML += trial.prompt;\n    }\n\n    var trial_data = {};\n\n    // create response function\n    var after_response = function(info) {\n\n      // kill any remaining setTimeout handlers\n      jsPsych.pluginAPI.clearAllTimeouts();\n\n      // clear keyboard listener\n      jsPsych.pluginAPI.cancelAllKeyboardResponses();\n\n      var correct = false;\n      if (trial.key_answer === info.key) {\n        correct = true;\n      }\n\n      // save data\n      trial_data = {\n        \"rt\": info.rt,\n        \"correct\": correct,\n        \"stimulus\": trial.stimulus,\n        \"key_press\": info.key\n      };\n\n      display_element.innerHTML = '';\n\n      var timeout = info.rt == null;\n      if (timeout) {\n        doFeedback(correct, timeout);\n      }\n      else {\n        endTrial()\n      }\n    }\n\n    jsPsych.pluginAPI.getKeyboardResponse({\n      callback_function: after_response,\n      valid_responses: trial.choices,\n      rt_method: 'performance',\n      persist: false,\n      allow_held_key: false\n    });\n\n    if (trial.trial_duration !== null) {\n      jsPsych.pluginAPI.setTimeout(function() {\n        after_response({\n          key: null,\n          rt: null\n        });\n      }, trial.trial_duration);\n    }\n\n    function doFeedback(correct, timeout) {\n\n      if (timeout && !trial.show_feedback_on_timeout) {\n        display_element.innerHTML += trial.timeout_message;\n      } else {\n        // show image during feedback if flag is set\n        if (trial.show_stim_with_feedback) {\n          display_element.innerHTML = '<div id=\"jspsych-categorize-html-stimulus\" class=\"jspsych-categorize-html-stimulus\">'+trial.stimulus+'</div>';\n        }\n\n        // substitute answer in feedback string.\n        var atext = \"\";\n        if (correct) {\n          atext = trial.correct_text.replace(\"%ANS%\", trial.text_answer);\n        } else {\n          atext = trial.incorrect_text.replace(\"%ANS%\", trial.text_answer);\n        }\n\n        // show the feedback\n        display_element.innerHTML += atext;\n      }\n      // check if force correct button press is set\n      if (trial.force_correct_button_press && correct === false && ((timeout && trial.show_feedback_on_timeout) || !timeout)) {\n\n        var after_forced_response = function(info) {\n          endTrial();\n        }\n\n        jsPsych.pluginAPI.getKeyboardResponse({\n          callback_function: after_forced_response,\n          valid_responses: [trial.key_answer],\n          rt_method: 'performance',\n          persist: false,\n          allow_held_key: false\n        });\n\n      } else {\n        jsPsych.pluginAPI.setTimeout(function() {\n          endTrial();\n        }, trial.feedback_duration);\n      }\n\n    }\n\n    function endTrial() {\n      display_element.innerHTML = '';\n      jsPsych.finishTrial(trial_data);\n    }\n\n  };\n\n  return plugin;\n}\n","import { envConfig } from './main';\nimport {firestoreConfig} from \"../firebase\"\nimport localConfig from \"./config.json\"\nimport path from \"path\"\n\nconst getConfig = async (participantID, studyID) => {\n  let experimentConfig = localConfig\n  console.log(\"participant id:\", participantID)\n  if (envConfig.USE_ELECTRON ) {\n    const app = window.require(\"electron\").remote.app\n    const renderer = window.require(\"electron\").ipcRenderer;\n    const fs = window.require(\"fs\")\n    try {\n      const overrideConfig = path.join(\n        app.getPath(\"desktop\"),\n        \"msit-settings\",\n        `${participantID}-config.json`\n      );\n      console.log(\"Override config\", overrideConfig)\n      const newConfig = JSON.parse(fs.readFileSync(overrideConfig), \"utf8\")\n      experimentConfig = {...experimentConfig, ...newConfig}\n    } catch (error) {\n      console.warn(\"Using default config\")\n    }\n    renderer.send(\"save-config\", experimentConfig, participantID, studyID)\n  }  else if (envConfig.USE_FIREBASE) {\n    const newConfig = await firestoreConfig(studyID, participantID);\n    if (newConfig) {\n      experimentConfig = newConfig;\n    } else {\n      console.warn(\"No default config found in Firestore. Resorting to local config.\")\n    }\n  }\n  else {\n    console.warn(\"Using default config\")\n  }\n  return experimentConfig\n}\n\nexport { getConfig }\n","import React, { useEffect, useState } from \"react\"\nimport { Experiment, jsPsych } from \"jspsych-react\";\nimport { tl } from \"../timelines/main\";\nimport { rt_categorize_html } from \"../lib/rt-categorize-html\";\nimport { getConfig } from \"../config/experiment\"\n\nfunction JsPsychExperiment({ dataUpdateFunction, dataFinishFunction, participantID, studyID }) {\n  const [timeline, setTimeline] = useState([])\n\n  useEffect(() => {\n    getConfig(participantID, studyID).then((experimentConfig) => {\n      const newTimeline = tl(experimentConfig)\n      setTimeline(newTimeline)\n    })\n      .catch(error => console.error(error))\n    // eslint-disable-next-line\n  }, [])\n\n  jsPsych.plugins[\"rt-categorize-html\"] = rt_categorize_html();\n\n  if (timeline.length === 0) {\n    return (\n      <div className=\"App height-100\">\n        <div className=\"centered-h-v\">Loading task</div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"App\">\n        <Experiment\n          settings={{\n            timeline: timeline,\n            on_data_update: (data) => dataUpdateFunction(data),\n            on_finish: (data) => dataFinishFunction(data),\n          }}\n        />\n      </div>\n    );\n  }\n}\nexport default JsPsychExperiment;\n","import preamble from \"./preamble\"\nimport experimentEnd from \"../trials/experimentEnd\"\nimport taskBlock from \"./taskBlock\"\nimport { envConfig } from \"../config/main\"\n\nconst tl = (experimentConfig) => {\n  const timeline = [preamble]\n  if (!envConfig.USE_MTURK) {\n    timeline.push(taskBlock(true, experimentConfig), taskBlock(false, experimentConfig))\n  }\n  timeline.push(experimentEnd(3000))\n  return timeline\n}\n\nexport { tl }\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport Login from \"./components/Login\";\nimport { jsPsych } from \"jspsych-react\";\nimport { getTurkUniqueId, getProlificId, sleep } from \"./lib/utils\";\nimport { initParticipant, addToFirebase } from \"./firebase\";\nimport JsPsychExperiment from \"./components/JsPsychExperiment\";\nimport { envConfig } from \"./config/main\";\nimport { version } from \"../package.json\"\n\nfunction App() {\n  // Variables for time\n  const startDate = new Date().toISOString();\n  // Variables for login\n  const [loggedIn, setLogin] = useState(false);\n  const [ipcRenderer, setRenderer] = useState(false);\n  const [psiturk, setPsiturk] = useState(false);\n  const [envParticipantId, setEnvParticipantId] = useState(\"\");\n  const [envStudyId, setEnvStudyId] = useState(\"\");\n  const [participantID, setParticipantID] = useState(\"\")\n  const [studyID, setStudyID] = useState(\"\")\n  const [currentMethod, setMethod] = useState(\"default\");\n  const [reject, setReject] = useState(false);\n\n  const query = new URLSearchParams(window.location.search);\n\n  // Validation functions for desktop case and firebase\n  const defaultValidation = async () => {\n    return true;\n  };\n  const firebaseValidation = (participantId, studyId) => {\n    return initParticipant(participantId, studyId, startDate);\n  };\n\n  // Adding data functions for firebase, electron adn Mturk\n  const defaultFunction = () => {};\n  const firebaseUpdateFunction = (data) => {\n    addToFirebase(data);\n  };\n  const desktopUpdateFunction = (data) => {\n    ipcRenderer.send(\"data\", data);\n  };\n  const psiturkUpdateFunction = (data) => {\n    psiturk.recordTrialData(data);\n  };\n\n  // On finish functions for electron, Mturk\n  const desktopFinishFunction = () => {\n    ipcRenderer.send(\"end\", \"true\");\n  };\n  const psiturkFinishFunction = () => {\n    const completePsiturk = async () => {\n      psiturk.saveData();\n      await sleep(5000);\n      psiturk.completeHIT();\n    };\n    completePsiturk();\n  };\n\n  // Function to add jspsych data on login\n  const setLoggedIn = useCallback(\n    (loggedIn, newStudyID, newParticipantID) => {\n      if (loggedIn) {\n        jsPsych.data.addProperties({\n          participant_id: newParticipantID,\n          study_id: newStudyID,\n          start_date: startDate,\n          timestamp: Date.now(),\n          task_version: version\n        });\n      }\n      setParticipantID(newParticipantID)\n      setStudyID(newStudyID)\n      setLogin(loggedIn);\n    },\n    [startDate]\n  );\n\n  // Login logic\n  useEffect(() => {\n    // For testing and debugging purposes\n    console.log(\"Environment configuration:\", envConfig)\n\n    // If on desktop\n    if (envConfig.USE_ELECTRON) {\n      const { ipcRenderer } = window.require(\"electron\");\n      setRenderer(ipcRenderer);\n      ipcRenderer.send('updateEnvironmentVariables', envConfig)\n      // If at home, fill in fields based on environment variables\n      const credentials = ipcRenderer.sendSync(\"syncCredentials\");\n      if (credentials.envParticipantId) {\n        setEnvParticipantId(credentials.envParticipantId);\n      }\n      if (credentials.envStudyId) {\n        setEnvStudyId(credentials.envStudyId);\n      }\n      setMethod(\"desktop\");\n    }\n    // If online\n    else {\n      // If MTURK\n      if (envConfig.USE_MTURK) {\n        /* eslint-disable */\n        window.lodash = _.noConflict();\n        const turkId = getTurkUniqueId();\n        setPsiturk(new PsiTurk(turkId, \"/complete\"));\n        setMethod(\"mturk\");\n        setLoggedIn(true, \"mturk\", turkId);\n        /* eslint-enable */\n      }\n\n      // If prolific\n      else if (envConfig.USE_PROLIFIC) {\n        const pID = getProlificId();\n        if (envConfig.USE_FIREBASE && pID) {\n          setMethod(\"firebase\");\n          setLoggedIn(true, \"prolific\", pID);\n        } else {\n          setReject(true);\n        }\n      }\n\n      // If firebase\n      else if (envConfig.USE_FIREBASE) {\n        setMethod(\"firebase\");\n        // Autologin with query parameters\n        const participantId = query.get(\"participantID\");\n        const studyId = query.get(\"studyID\");\n        if (participantId) {\n          setEnvParticipantId(participantId)\n        }\n        if (studyId) {\n          setEnvStudyId(studyId)\n        }\n      } else {\n        setReject(true);\n      }\n    }\n  // eslint-disable-next-line\n}, []);\n\n  if (reject) {\n    return (\n      <div className=\"centered-h-v\">\n        <div className=\"width-50 alert alert-danger\">\n          Please ask your task provider to enable firebase.\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        {loggedIn ? (\n          <JsPsychExperiment\n            dataUpdateFunction={\n              {\n                desktop: desktopUpdateFunction,\n                firebase: firebaseUpdateFunction,\n                mturk: psiturkUpdateFunction,\n                default: defaultFunction,\n              }[currentMethod]\n            }\n            dataFinishFunction={\n              {\n                desktop: desktopFinishFunction,\n                mturk: psiturkFinishFunction,\n                firebase: defaultFunction,\n                default: defaultFunction,\n              }[currentMethod]\n            }\n            participantID={participantID}\n            studyID={studyID}\n          />\n        ) : (\n          <Login\n            validationFunction={\n              {\n                desktop: defaultValidation,\n                default: defaultValidation,\n                firebase: firebaseValidation,\n              }[currentMethod]\n            }\n            envParticipantId={envParticipantId}\n            envStudyId={envStudyId}\n            onLogin={setLoggedIn}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","const baseStimulus = (element, prompt=false) => {\n  const class_ = (prompt) ? 'main-prompt': 'main'\n  return `<div class=${class_}>${element}</div>`\n}\n\nexport {\n  baseStimulus\n}\n"],"sourceRoot":""}